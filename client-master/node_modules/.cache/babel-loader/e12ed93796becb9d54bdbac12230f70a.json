{"ast":null,"code":"var _jsxFileName = \"/Users/andrejturin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Messenger-for-Exactpro/client-master/src/components/AddMemberToChat.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Requests from '../Requests';\nimport UserAvatar from './UserAvatar';\nimport Profile from './Profile';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Button, IconButton, InputBase, List, ListItem, ListItemAvatar, ListItemSecondaryAction, ListItemText, Toolbar } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar profile = ''; // Добавить пользователя в чат\n\nconst AddMemberToChat = props => {\n  _s();\n\n  const [item, setItem] = useState('AddMember'); // отображаемый элемент\n\n  const [searchChat, setSearchChat] = useState(\"\");\n  const useStyles = makeStyles(theme => // стили\n  createStyles({\n    content: {\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden'\n    },\n    header: {\n      position: \"static\",\n      flexGrow: 1,\n      height: '10%'\n    },\n    headerTitle: {\n      flexGrow: 1\n    },\n    headerButton: {\n      marginLeft: theme.spacing(2),\n      color: 'white',\n      background: '#3d50b6'\n    },\n    addMember: {\n      width: '100%',\n      position: 'relative',\n      overflow: 'scroll',\n      height: '90%'\n    },\n    root: {\n      flexGrow: 1\n    },\n    root1: {\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n      position: 'relative',\n      overflow: 'auto'\n    },\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    title: {\n      flexGrow: 1\n    },\n    userNameLabel: {},\n    backButton: {\n      marginRight: theme.spacing(2),\n      color: 'white',\n      background: '#3d50b6'\n    },\n    editButton: {\n      marginRight: theme.spacing(2),\n      color: 'white',\n      background: '#3d50b6'\n    },\n    cancelButton: {\n      marginRight: theme.spacing(2),\n      color: 'white',\n      background: '#3d50b6'\n    },\n    addMemberButton: {\n      variant: \"contained\",\n      color: \"primary\"\n    },\n    smallAvatar: {\n      width: theme.spacing(5),\n      height: theme.spacing(5)\n    },\n    largeAvatar: {\n      width: theme.spacing(15),\n      height: theme.spacing(15)\n    },\n    groupNameInput: {},\n    groupBioInput: {},\n    nameInput: {},\n    formControl: {\n      margin: theme.spacing(3)\n    },\n    members: {\n      overflow: 'auto',\n      width: 100\n    },\n    demo: {\n      backgroundColor: theme.palette.background.paper\n    },\n    search: {\n      flexGrow: 1,\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto'\n      }\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    inputRoot: {\n      color: 'inherit'\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: '20ch'\n      }\n    }\n  }));\n  const classes = useStyles(); // классы стилей\n  // Добавление пользователя в чат\n\n  function AddMember(user) {\n    let data = {\n      // создание данных для отправки на сервер\n      chatId: props.chatInfo.id,\n      user: user.name\n    };\n    var request = Requests.AddMemberToChat(data); // отправка запроса на добавление пользователя в чат\n\n    switch (request === null || request === void 0 ? void 0 : request.status) {\n      case 200:\n        props.Done();\n        break;\n\n      case 401:\n        alert(\"User is not logged in.\");\n        break;\n\n      case 403:\n        alert(\"User has insufficient rights.\");\n        break;\n\n      default:\n        alert(\"Error.\");\n        break;\n    }\n  } // открытие порфиля пользователя\n\n\n  function OpenProfile() {\n    props.profileStore.Clear(); // очитска данных о предыдущем профиле\n\n    var request = Requests.OpenProfile(profile); // отправка запроса об открытии профиля\n\n    switch (request === null || request === void 0 ? void 0 : request.status) {\n      case 200:\n        break;\n\n      case 401:\n        alert(\"User is not logged in.\");\n        break;\n\n      default:\n        alert(\"Error.\");\n        break;\n    }\n  }\n\n  function SetItem() {\n    switch (item) {\n      case 'AddMember':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.content,\n          children: [/*#__PURE__*/_jsxDEV(AppBar, {\n            className: classes.header,\n            children: /*#__PURE__*/_jsxDEV(Toolbar, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => props.Done(),\n                className: classes.headerButton,\n                variant: \"outlined\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.search,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.searchIcon,\n                  children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n                  placeholder: \"Search\\u2026\",\n                  classes: {\n                    root: classes.inputRoot,\n                    input: classes.inputInput\n                  },\n                  inputProps: {\n                    'aria-label': 'search'\n                  },\n                  value: searchChat,\n                  onChange: event => setSearchChat(event.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            dense: true,\n            className: classes.addMember,\n            children: props.users.map((user, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(UserAvatar, {\n                  user: {\n                    name: user.name,\n                    picture: user.picture\n                  },\n                  onlineStatusStore: props.onlineStatusStore,\n                  size: 5\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: user.name,\n                onClick: () => {\n                  profile = user.name;\n                  setItem('Profile');\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  \"aria-label\": \"add\",\n                  onClick: () => AddMember(user),\n                  children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this);\n\n      case 'Profile':\n        OpenProfile();\n        return /*#__PURE__*/_jsxDEV(Profile, {\n          profileStore: props.profileStore,\n          onlineStatusStore: props.onlineStatusStore,\n          Change: false,\n          Done: () => setItem('AddMember')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this);\n    }\n  }\n\n  return SetItem();\n};\n\n_s(AddMemberToChat, \"8fLxUK1T2e1i15mI8bwxRFtFLtc=\", true);\n\n_c = AddMemberToChat;\nexport default AddMemberToChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMemberToChat\");","map":{"version":3,"sources":["/Users/andrejturin/Документы/Messenger-for-Exactpro/client-master/src/components/AddMemberToChat.tsx"],"names":["React","useState","Requests","UserAvatar","Profile","createStyles","makeStyles","AppBar","Button","IconButton","InputBase","List","ListItem","ListItemAvatar","ListItemSecondaryAction","ListItemText","Toolbar","AddIcon","SearchIcon","profile","AddMemberToChat","props","item","setItem","searchChat","setSearchChat","useStyles","theme","content","width","height","overflow","header","position","flexGrow","headerTitle","headerButton","marginLeft","spacing","color","background","addMember","root","root1","backgroundColor","palette","paper","marginTop","display","flexDirection","alignItems","title","userNameLabel","backButton","marginRight","editButton","cancelButton","addMemberButton","variant","smallAvatar","largeAvatar","groupNameInput","groupBioInput","nameInput","formControl","margin","members","demo","search","borderRadius","shape","breakpoints","up","searchIcon","padding","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","classes","AddMember","user","data","chatId","chatInfo","id","name","request","status","Done","alert","OpenProfile","profileStore","Clear","SetItem","input","event","target","value","users","map","index","picture","onlineStatusStore"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAKA,SAASC,YAAT,EAAuBC,UAAvB,QAAgD,0BAAhD;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,UAAzB,EAAqCC,SAArC,EAAgDC,IAAhD,EAAsDC,QAAtD,EAAgEC,cAAhE,EAAgFC,uBAAhF,EAAyGC,YAAzG,EAAuHC,OAAvH,QAAsI,mBAAtI;AACA,OAAOC,OAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,IAAIC,OAAe,GAAG,EAAtB,C,CAEA;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAA0I;AAAA;;AAE9J,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAS,WAAT,CAAhC,CAF8J,CAExG;;AACtD,QAAM,CAACuB,UAAD,EAAaC,aAAb,IAA8BxB,QAAQ,CAAS,EAAT,CAA5C;AACA,QAAMyB,SAAS,GAAGpB,UAAU,CAAEqB,KAAD,IAAkB;AAC3CtB,EAAAA,YAAY,CAAC;AACTuB,IAAAA,OAAO,EAAE;AACLC,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,MAAM,EAAE,MAFH;AAGLC,MAAAA,QAAQ,EAAE;AAHL,KADA;AAMTC,IAAAA,MAAM,EAAE;AACJC,MAAAA,QAAQ,EAAE,QADN;AAEJC,MAAAA,QAAQ,EAAE,CAFN;AAGJJ,MAAAA,MAAM,EAAE;AAHJ,KANC;AAWTK,IAAAA,WAAW,EAAE;AACTD,MAAAA,QAAQ,EAAE;AADD,KAXJ;AAcTE,IAAAA,YAAY,EAAE;AACVC,MAAAA,UAAU,EAAEV,KAAK,CAACW,OAAN,CAAc,CAAd,CADF;AAEVC,MAAAA,KAAK,EAAE,OAFG;AAGVC,MAAAA,UAAU,EAAE;AAHF,KAdL;AAmBTC,IAAAA,SAAS,EAAE;AACPZ,MAAAA,KAAK,EAAE,MADA;AAEPI,MAAAA,QAAQ,EAAE,UAFH;AAGPF,MAAAA,QAAQ,EAAE,QAHH;AAIPD,MAAAA,MAAM,EAAE;AAJD,KAnBF;AAyBTY,IAAAA,IAAI,EAAE;AACFR,MAAAA,QAAQ,EAAE;AADR,KAzBG;AA4BTS,IAAAA,KAAK,EAAE;AACHd,MAAAA,KAAK,EAAE,MADJ;AAEHe,MAAAA,eAAe,EAAEjB,KAAK,CAACkB,OAAN,CAAcL,UAAd,CAAyBM,KAFvC;AAGHb,MAAAA,QAAQ,EAAE,UAHP;AAIHF,MAAAA,QAAQ,EAAE;AAJP,KA5BE;AAkCTe,IAAAA,KAAK,EAAE;AACHC,MAAAA,SAAS,EAAEpB,KAAK,CAACW,OAAN,CAAc,CAAd,CADR;AAEHU,MAAAA,OAAO,EAAE,MAFN;AAGHC,MAAAA,aAAa,EAAE,QAHZ;AAIHC,MAAAA,UAAU,EAAE;AAJT,KAlCE;AAwCTC,IAAAA,KAAK,EAAE;AACHjB,MAAAA,QAAQ,EAAE;AADP,KAxCE;AA2CTkB,IAAAA,aAAa,EAAE,EA3CN;AA8CTC,IAAAA,UAAU,EAAE;AACRC,MAAAA,WAAW,EAAE3B,KAAK,CAACW,OAAN,CAAc,CAAd,CADL;AAERC,MAAAA,KAAK,EAAE,OAFC;AAGRC,MAAAA,UAAU,EAAE;AAHJ,KA9CH;AAmDTe,IAAAA,UAAU,EAAE;AACRD,MAAAA,WAAW,EAAE3B,KAAK,CAACW,OAAN,CAAc,CAAd,CADL;AAERC,MAAAA,KAAK,EAAE,OAFC;AAGRC,MAAAA,UAAU,EAAE;AAHJ,KAnDH;AAwDTgB,IAAAA,YAAY,EAAE;AACVF,MAAAA,WAAW,EAAE3B,KAAK,CAACW,OAAN,CAAc,CAAd,CADH;AAEVC,MAAAA,KAAK,EAAE,OAFG;AAGVC,MAAAA,UAAU,EAAE;AAHF,KAxDL;AA6DTiB,IAAAA,eAAe,EAAE;AACbC,MAAAA,OAAO,EAAE,WADI;AAEbnB,MAAAA,KAAK,EAAE;AAFM,KA7DR;AAiEToB,IAAAA,WAAW,EAAE;AACT9B,MAAAA,KAAK,EAAEF,KAAK,CAACW,OAAN,CAAc,CAAd,CADE;AAETR,MAAAA,MAAM,EAAEH,KAAK,CAACW,OAAN,CAAc,CAAd;AAFC,KAjEJ;AAqETsB,IAAAA,WAAW,EAAE;AACT/B,MAAAA,KAAK,EAAEF,KAAK,CAACW,OAAN,CAAc,EAAd,CADE;AAETR,MAAAA,MAAM,EAAEH,KAAK,CAACW,OAAN,CAAc,EAAd;AAFC,KArEJ;AAyETuB,IAAAA,cAAc,EAAE,EAzEP;AA4ETC,IAAAA,aAAa,EAAE,EA5EN;AA+ETC,IAAAA,SAAS,EAAE,EA/EF;AAkFTC,IAAAA,WAAW,EAAE;AACTC,MAAAA,MAAM,EAAEtC,KAAK,CAACW,OAAN,CAAc,CAAd;AADC,KAlFJ;AAqFT4B,IAAAA,OAAO,EAAE;AACLnC,MAAAA,QAAQ,EAAE,MADL;AAELF,MAAAA,KAAK,EAAE;AAFF,KArFA;AAyFTsC,IAAAA,IAAI,EAAE;AACFvB,MAAAA,eAAe,EAAEjB,KAAK,CAACkB,OAAN,CAAcL,UAAd,CAAyBM;AADxC,KAzFG;AA4FTsB,IAAAA,MAAM,EAAE;AACJlC,MAAAA,QAAQ,EAAE,CADN;AAEJD,MAAAA,QAAQ,EAAE,UAFN;AAGJoC,MAAAA,YAAY,EAAE1C,KAAK,CAAC2C,KAAN,CAAYD,YAHtB;AAIJf,MAAAA,WAAW,EAAE3B,KAAK,CAACW,OAAN,CAAc,CAAd,CAJT;AAKJD,MAAAA,UAAU,EAAE,CALR;AAMJR,MAAAA,KAAK,EAAE,MANH;AAOJ,OAACF,KAAK,CAAC4C,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BnC,QAAAA,UAAU,EAAEV,KAAK,CAACW,OAAN,CAAc,CAAd,CADgB;AAE5BT,QAAAA,KAAK,EAAE;AAFqB;AAP1B,KA5FC;AAwGP4C,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAE/C,KAAK,CAACW,OAAN,CAAc,CAAd,EAAiB,CAAjB,CADC;AAEVR,MAAAA,MAAM,EAAE,MAFE;AAGVG,MAAAA,QAAQ,EAAE,UAHA;AAIV0C,MAAAA,aAAa,EAAE,MAJL;AAKV3B,MAAAA,OAAO,EAAE,MALC;AAMVE,MAAAA,UAAU,EAAE,QANF;AAOV0B,MAAAA,cAAc,EAAE;AAPN,KAxGL;AAiHPC,IAAAA,SAAS,EAAE;AACTtC,MAAAA,KAAK,EAAE;AADE,KAjHJ;AAoHPuC,IAAAA,UAAU,EAAE;AACVJ,MAAAA,OAAO,EAAE/C,KAAK,CAACW,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CADC;AAEV;AACAyC,MAAAA,WAAW,EAAG,cAAapD,KAAK,CAACW,OAAN,CAAc,CAAd,CAAiB,KAHlC;AAIV0C,MAAAA,UAAU,EAAErD,KAAK,CAACsD,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,CAJF;AAKVrD,MAAAA,KAAK,EAAE,MALG;AAMV,OAACF,KAAK,CAAC4C,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5B3C,QAAAA,KAAK,EAAE;AADqB;AANpB;AApHL,GAAD,CADY,CAA5B;AAiIA,QAAMsD,OAAO,GAAGzD,SAAS,EAAzB,CArI8J,CAqIlI;AAE5B;;AACA,WAAS0D,SAAT,CAAmBC,IAAnB,EAAyC;AACrC,QAAIC,IAAoC,GAAG;AAAE;AACzCC,MAAAA,MAAM,EAAElE,KAAK,CAACmE,QAAN,CAAeC,EADgB;AAEvCJ,MAAAA,IAAI,EAAEA,IAAI,CAACK;AAF4B,KAA3C;AAIA,QAAIC,OAAsD,GAAGzF,QAAQ,CAACkB,eAAT,CAAyBkE,IAAzB,CAA7D,CALqC,CAKuD;;AAC5F,YAAOK,OAAP,aAAOA,OAAP,uBAAOA,OAAO,CAAEC,MAAhB;AACI,WAAK,GAAL;AACIvE,QAAAA,KAAK,CAACwE,IAAN;AACA;;AACJ,WAAK,GAAL;AACIC,QAAAA,KAAK,CAAC,wBAAD,CAAL;AACA;;AACJ,WAAK,GAAL;AACIA,QAAAA,KAAK,CAAC,+BAAD,CAAL;AACA;;AACJ;AACIA,QAAAA,KAAK,CAAC,QAAD,CAAL;AACA;AAZR;AAcH,GA5J6J,CA8J9J;;;AACA,WAASC,WAAT,GAA6B;AACzB1E,IAAAA,KAAK,CAAC2E,YAAN,CAAmBC,KAAnB,GADyB,CACE;;AAC3B,QAAIN,OAAsD,GAAGzF,QAAQ,CAAC6F,WAAT,CAAqB5E,OAArB,CAA7D,CAFyB,CAEkE;;AAC3F,YAAOwE,OAAP,aAAOA,OAAP,uBAAOA,OAAO,CAAEC,MAAhB;AACI,WAAK,GAAL;AACI;;AACJ,WAAK,GAAL;AACIE,QAAAA,KAAK,CAAC,wBAAD,CAAL;AACA;;AACJ;AACIA,QAAAA,KAAK,CAAC,QAAD,CAAL;AACA;AARR;AAUH;;AAED,WAASI,OAAT,GAAgC;AAC5B,YAAO5E,IAAP;AACI,WAAK,WAAL;AACI,4BACI;AACI,UAAA,SAAS,EAAE6D,OAAO,CAACvD,OADvB;AAAA,kCAGI,QAAC,MAAD;AACI,YAAA,SAAS,EAAEuD,OAAO,CAACnD,MADvB;AAAA,mCAGI,QAAC,OAAD;AAAA,sCACI,QAAC,MAAD;AACI,gBAAA,OAAO,EAAE,MAAIX,KAAK,CAACwE,IAAN,EADjB;AAEI,gBAAA,SAAS,EAAEV,OAAO,CAAC/C,YAFvB;AAGI,gBAAA,OAAO,EAAC,UAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAQI;AAAK,gBAAA,SAAS,EAAE+C,OAAO,CAACf,MAAxB;AAAA,wCACI;AAAK,kBAAA,SAAS,EAAEe,OAAO,CAACV,UAAxB;AAAA,yCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII,QAAC,SAAD;AACI,kBAAA,WAAW,EAAC,cADhB;AAEI,kBAAA,OAAO,EAAE;AACL/B,oBAAAA,IAAI,EAAEyC,OAAO,CAACN,SADT;AAELsB,oBAAAA,KAAK,EAAEhB,OAAO,CAACL;AAFV,mBAFb;AAMI,kBAAA,UAAU,EAAE;AAAE,kCAAc;AAAhB,mBANhB;AAOI,kBAAA,KAAK,EAAEtD,UAPX;AAQI,kBAAA,QAAQ,EAAE4E,KAAK,IAAE3E,aAAa,CAAC2E,KAAK,CAACC,MAAN,CAAaC,KAAd;AARlC;AAAA;AAAA;AAAA;AAAA,wBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,kBAHJ,eA+BI,QAAC,IAAD;AACI,YAAA,KAAK,EAAE,IADX;AAEI,YAAA,SAAS,EAAEnB,OAAO,CAAC1C,SAFvB;AAAA,sBAIKpB,KAAK,CAACkF,KAAN,CAAYC,GAAZ,CAAgB,CAACnB,IAAD,EAAiBoB,KAAjB,kBACb,QAAC,QAAD;AAAA,sCAGI,QAAC,cAAD;AAAA,uCACI,QAAC,UAAD;AACI,kBAAA,IAAI,EAAE;AAACf,oBAAAA,IAAI,EAAEL,IAAI,CAACK,IAAZ;AAAkBgB,oBAAAA,OAAO,EAAErB,IAAI,CAACqB;AAAhC,mBADV;AAEI,kBAAA,iBAAiB,EAAErF,KAAK,CAACsF,iBAF7B;AAGI,kBAAA,IAAI,EAAE;AAHV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAUQ,QAAC,YAAD;AACI,gBAAA,OAAO,EAAEtB,IAAI,CAACK,IADlB;AAEI,gBAAA,OAAO,EAAE,MAAI;AAACvE,kBAAAA,OAAO,GAAGkE,IAAI,CAACK,IAAf;AAAqBnE,kBAAAA,OAAO,CAAC,SAAD,CAAP;AAAmB;AAF1D;AAAA;AAAA;AAAA;AAAA,sBAVR,eAcI,QAAC,uBAAD;AAAA,uCACI,QAAC,UAAD;AACI,kBAAA,IAAI,EAAC,KADT;AAEI,gCAAW,KAFf;AAGI,kBAAA,OAAO,EAAE,MAAI6D,SAAS,CAACC,IAAD,CAH1B;AAAA,yCAKI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAdJ;AAAA,eACSoB,KADT;AAAA;AAAA;AAAA;AAAA,oBADH;AAJL;AAAA;AAAA;AAAA;AAAA,kBA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;;AAiEJ,WAAK,SAAL;AACIV,QAAAA,WAAW;AACX,4BACI,QAAC,OAAD;AACI,UAAA,YAAY,EAAE1E,KAAK,CAAC2E,YADxB;AAEI,UAAA,iBAAiB,EAAE3E,KAAK,CAACsF,iBAF7B;AAGI,UAAA,MAAM,EAAE,KAHZ;AAII,UAAA,IAAI,EAAE,MAAIpF,OAAO,CAAC,WAAD;AAJrB;AAAA;AAAA;AAAA;AAAA,gBADJ;;AAQJ;AACI,4BACI,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA,gBADJ;AA9ER;AAkFH;;AAED,SACI2E,OAAO,EADX;AAGH,CAtQD;;GAAM9E,e;;KAAAA,e;AAwQN,eAAeA,eAAf","sourcesContent":["import React, {useState} from 'react'\nimport Requests from '../Requests'\nimport UserAvatar from './UserAvatar'\nimport Profile from './Profile'\nimport OnlineStatusStore from '../stores/OnlineStatusStore'\nimport ProfileStore from '../stores/ProfileStore'\nimport { ChatsUpdate } from \"../interfaces/ChatsUpdate\"\nimport { UserInfo } from '../interfaces/UserInfo'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport { AppBar, Button, IconButton, InputBase, List, ListItem, ListItemAvatar, ListItemSecondaryAction, ListItemText, Toolbar } from '@material-ui/core'\nimport AddIcon  from '@material-ui/icons/Add'\nimport SearchIcon from '@material-ui/icons/Search';\n\nvar profile: string = ''\n\n// Добавить пользователя в чат\nconst AddMemberToChat = (props: {chatInfo: ChatsUpdate, users: UserInfo[], profileStore: ProfileStore, onlineStatusStore: OnlineStatusStore, Done: ()=> void}) => {\n    \n    const [item, setItem] = useState<string>('AddMember') // отображаемый элемент\n    const [searchChat, setSearchChat] = useState<string>(\"\")\n    const useStyles = makeStyles((theme: Theme) => // стили\n        createStyles({\n            content: {\n                width: '100%',\n                height: '100%',\n                overflow: 'hidden'\n            },\n            header: {\n                position: \"static\",\n                flexGrow: 1,\n                height: '10%'\n            },\n            headerTitle: {\n                flexGrow: 1\n            },\n            headerButton: {\n                marginLeft: theme.spacing(2),\n                color: 'white',\n                background: '#3d50b6'\n            },\n            addMember: {\n                width: '100%',\n                position: 'relative',\n                overflow: 'scroll',\n                height: '90%'\n            },\n            root: {\n                flexGrow: 1\n            },\n            root1: {\n                width: '100%',\n                backgroundColor: theme.palette.background.paper,\n                position: 'relative',\n                overflow: 'auto'\n            },\n            paper: {\n                marginTop: theme.spacing(8),\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center'\n            },\n            title: {\n                flexGrow: 1\n            },\n            userNameLabel: {\n\n            },\n            backButton: {\n                marginRight: theme.spacing(2),\n                color: 'white',\n                background: '#3d50b6'\n            },\n            editButton: {\n                marginRight: theme.spacing(2),\n                color: 'white',\n                background: '#3d50b6'\n            },\n            cancelButton: {\n                marginRight: theme.spacing(2),\n                color: 'white',\n                background: '#3d50b6'\n            },\n            addMemberButton: {\n                variant: \"contained\",\n                color: \"primary\"\n            },\n            smallAvatar: {\n                width: theme.spacing(5),\n                height: theme.spacing(5)\n            },\n            largeAvatar: {\n                width: theme.spacing(15),\n                height: theme.spacing(15)\n            },\n            groupNameInput: {\n\n            },\n            groupBioInput: {\n      \n            },\n            nameInput: {\n\n            },\n            formControl: {\n                margin: theme.spacing(3)\n            },\n            members: {\n                overflow: 'auto',\n                width: 100\n            },\n            demo: {\n                backgroundColor: theme.palette.background.paper\n            },\n            search: {\n                flexGrow: 1,\n                position: 'relative',\n                borderRadius: theme.shape.borderRadius,\n                marginRight: theme.spacing(2),\n                marginLeft: 0,\n                width: '100%',\n                [theme.breakpoints.up('sm')]: {\n                  marginLeft: theme.spacing(3),\n                  width: 'auto',\n                },\n              },\n              searchIcon: {\n                padding: theme.spacing(0, 2),\n                height: '100%',\n                position: 'absolute',\n                pointerEvents: 'none',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n              },\n              inputRoot: {\n                color: 'inherit',\n              },\n              inputInput: {\n                padding: theme.spacing(1, 1, 1, 0),\n                // vertical padding + font size from searchIcon\n                paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n                transition: theme.transitions.create('width'),\n                width: '100%',\n                [theme.breakpoints.up('md')]: {\n                  width: '20ch',\n                },\n            }\n        })\n    )\n    const classes = useStyles() // классы стилей\n\n    // Добавление пользователя в чат\n    function AddMember(user: UserInfo): void {\n        let data: {chatId: string, user: string} = { // создание данных для отправки на сервер\n            chatId: props.chatInfo.id,\n            user: user.name\n        }\n        var request: {responseText: string, status: number} | null = Requests.AddMemberToChat(data) // отправка запроса на добавление пользователя в чат\n        switch(request?.status){\n            case 200:\n                props.Done()\n                break\n            case 401:\n                alert(\"User is not logged in.\")\n                break\n            case 403:\n                alert(\"User has insufficient rights.\")\n                break\n            default:\n                alert(\"Error.\")\n                break\n        }\n    }\n\n    // открытие порфиля пользователя\n    function OpenProfile(): void {\n        props.profileStore.Clear() // очитска данных о предыдущем профиле\n        var request: {responseText: string, status: number} | null = Requests.OpenProfile(profile) // отправка запроса об открытии профиля\n        switch(request?.status){\n            case 200:\n                break\n            case 401:\n                alert(\"User is not logged in.\")\n                break\n            default:\n                alert(\"Error.\")\n                break\n        }  \n    }\n    \n    function SetItem(): JSX.Element {\n        switch(item){\n            case 'AddMember':\n                return(\n                    <div\n                        className={classes.content}\n                    >\n                        <AppBar \n                            className={classes.header}\n                        >\n                            <Toolbar>\n                                <Button\n                                    onClick={()=>props.Done()}\n                                    className={classes.headerButton}\n                                    variant=\"outlined\"\n                                >\n                                    Cancel\n                                </Button>\n                                <div className={classes.search}>\n                                    <div className={classes.searchIcon}>\n                                        <SearchIcon />\n                                    </div>\n                                    <InputBase\n                                        placeholder=\"Search…\"\n                                        classes={{\n                                            root: classes.inputRoot,\n                                            input: classes.inputInput,\n                                        }}\n                                        inputProps={{ 'aria-label': 'search' }}\n                                        value={searchChat}\n                                        onChange={event=>setSearchChat(event.target.value)}\n                                    />\n                                </div>\n                            </Toolbar>\n                        </AppBar>\n                        <List \n                            dense={true}\n                            className={classes.addMember}\n                        >\n                            {props.users.map((user: UserInfo, index: number) =>\n                                <ListItem \n                                    key={index}\n                                >\n                                    <ListItemAvatar>\n                                        <UserAvatar \n                                            user={{name: user.name, picture: user.picture}} \n                                            onlineStatusStore={props.onlineStatusStore}\n                                            size={5}\n                                        />\n                                    </ListItemAvatar>\n                                        <ListItemText\n                                            primary={user.name}\n                                            onClick={()=>{profile = user.name; setItem('Profile')}}\n                                        />\n                                    <ListItemSecondaryAction>\n                                        <IconButton \n                                            edge=\"end\" \n                                            aria-label=\"add\"\n                                            onClick={()=>AddMember(user)}\n                                        >\n                                            <AddIcon/>\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            )}\n                        </List>\n                    </div>\n                )\n            case 'Profile':\n                OpenProfile()\n                return(\n                    <Profile \n                        profileStore={props.profileStore} \n                        onlineStatusStore={props.onlineStatusStore} \n                        Change={false} \n                        Done={()=>setItem('AddMember')}\n                    />\n                )\n            default:\n                return(\n                    <React.Fragment/>\n                )\n        }\n    }\n\n    return (\n        SetItem()\n    )\n}\n\nexport default AddMemberToChat"]},"metadata":{},"sourceType":"module"}