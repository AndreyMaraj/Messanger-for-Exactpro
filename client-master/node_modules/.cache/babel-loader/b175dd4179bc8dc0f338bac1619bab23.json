{"ast":null,"code":"import Cookie from './Cookie';\n// Запросы на сервер \nexport default class Requests {\n  // адрес сервера\n  // Проверка ключа сессии на null\n  static CheckingNullKeySession() {\n    var cookieKeySession = Cookie.Get('key'); // Достаем из куки данные\n\n    if (cookieKeySession) {\n      return cookieKeySession;\n    } else {\n      alert('Session key error.');\n      return null;\n    }\n  } // Общий запрос на сервер\n\n\n  static Request(type, url, data) {\n    var request = new XMLHttpRequest();\n    request.open(type, Requests.Addres + url, false);\n    data === null ? request.send() : request.send(JSON.stringify(data));\n    return {\n      responseText: request.responseText,\n      status: request.status\n    };\n  } // Вход в мессенджер\n\n\n  static LogIn(username, password) {\n    var url = \"login?username=\" + username + \"&password=\" + password;\n    var request = this.Request(Requests.Get, url, null);\n    return {\n      responseText: request.responseText,\n      status: request.status\n    };\n  } // Регистрация \n\n\n  static SignIn(data) {\n    var url = \"registration\";\n    var request = this.Request(Requests.Post, url, data);\n    return {\n      responseText: request.responseText,\n      status: request.status\n    };\n  } // Оповещение сервера о том, что клиент на сайте\n\n\n  static Alive() {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"alive?key=\" + sessionKey;\n      var request = this.Request(Requests.Put, url, null);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Открытие профиля\n\n\n  static OpenProfile(username) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"get-user-info?key=\" + sessionKey + \"&name=\" + username;\n      var request = this.Request(Requests.Get, url, null);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Редактирование данных профиля\n\n\n  static ChangeProfileInfo(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"set-user-info?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Выход из мессенджера\n\n\n  static Disconnect() {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"disconnect-client?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, null);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Запрос на всех пользователей в мессенджере\n\n\n  static GetAllUsers() {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"all-users?key=\" + sessionKey;\n      var request = this.Request(Requests.Get, url, null);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Создание личного диалога\n\n\n  static CratePrivateChat(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"create-private-chat?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Создание группового чата\n\n\n  static CreateGroupChat(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"create-chat?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Открытие чата\n\n\n  static OpenChat(chatId) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"open-chat?key=\" + sessionKey + \"&chatId=\" + chatId;\n      var request = this.Request(Requests.Get, url, null);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Удаление чата \n\n\n  static DeleteChat(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"exit-from-chat?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Редактирование сообщения\n\n\n  static EditMesssage(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"edit-message?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Отправка сообщения\n\n\n  static SendMessage(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"send-message?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Прочтение сообщения\n\n\n  static ReadMessage(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"message-read?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Удаление сообщения\n\n\n  static DeleteMessage(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"delete-message?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Добавление пользователя в чат\n\n\n  static AddMemberToChat(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"add-user-in-chat?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Удаление пользователя из чата\n\n\n  static RemoveMemberFromChat(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"delete-user-from-chat?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Добавление администратора в чат\n\n\n  static AddChatAdministrator(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"add-admin?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Удаление администратора из чата\n\n\n  static RemoveChatAdministrator(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"delete-admin?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Запрос на пользователей, которых нет в чате\n\n\n  static UsersToAddToChat(chatId) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"users-to-add-in-chat?key=\" + sessionKey + '&chatId=' + chatId;\n      var request = this.Request(Requests.Get, url, null);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Редактирование данных чата\n\n\n  static ChangeChatInfo(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"set-chat-settings?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Подписка на ссе \n\n\n  static SseSubscribe() {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      Requests.Sse = new EventSource(Requests.Addres + \"sse?key=\" + sessionKey, {\n        withCredentials: true\n      });\n    }\n\n    return Requests.Sse;\n  }\n\n}\nRequests.Addres = 'http://127.0.0.1:8081/';\nRequests.Get = 'GET';\nRequests.Post = 'POST';\nRequests.Put = 'PUT';\nRequests.Sse = void 0;","map":{"version":3,"sources":["/home/maria/Messenger-for-Exactpro/client-master/src/Requests.ts"],"names":["Cookie","Requests","CheckingNullKeySession","cookieKeySession","Get","alert","Request","type","url","data","request","XMLHttpRequest","open","Addres","send","JSON","stringify","responseText","status","LogIn","username","password","SignIn","Post","Alive","sessionKey","Put","OpenProfile","ChangeProfileInfo","Disconnect","GetAllUsers","CratePrivateChat","CreateGroupChat","OpenChat","chatId","DeleteChat","EditMesssage","SendMessage","ReadMessage","DeleteMessage","AddMemberToChat","RemoveMemberFromChat","AddChatAdministrator","RemoveChatAdministrator","UsersToAddToChat","ChangeChatInfo","SseSubscribe","Sse","EventSource","withCredentials"],"mappings":"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","sourcesContent":["import Cookie from './Cookie'\nimport { ProfileInfo } from './interfaces/ProfileInfo'\n\n// Запросы на сервер \nexport default class Requests{\n\n    private static Addres: string = 'http://127.0.0.1:8081/' // адрес сервера\n    private static Get: string = 'GET' \n    private static Post: string = 'POST'\n    private static Put: string = 'PUT'\n    private static Sse: EventSource \n\n    // Проверка ключа сессии на null\n    private static CheckingNullKeySession(): string | null{\n        var cookieKeySession: string | null = Cookie.Get('key') // Достаем из куки данные\n        if(cookieKeySession){\n            return cookieKeySession\n        }\n        else{\n            alert('Session key error.')\n            return null\n        }\n    }\n\n    // Общий запрос на сервер\n    private static Request(type: string, url: string, data: any | null): {responseText: string, status: number}{\n        var request: XMLHttpRequest = new XMLHttpRequest()\n        request.open(type, Requests.Addres + url, false)\n        data === null ? request.send() : request.send(JSON.stringify(data))\n        return {responseText: request.responseText, status: request.status}\n    }\n\n    // Вход в мессенджер\n    public static LogIn(username: string, password: string): {responseText: string, status: number}{\n        var url = \"login?username=\" + username + \"&password=\" + password\n        var request = this.Request(Requests.Get, url, null)\n        return {responseText: request.responseText, status: request.status}\n    }\n\n    // Регистрация \n    public static SignIn(data: {name: string, password: string}): {responseText: string, status: number}{\n        var url = \"registration\"\n        var request = this.Request(Requests.Post, url, data)\n        return {responseText: request.responseText, status: request.status}\n    }\n\n    // Оповещение сервера о том, что клиент на сайте\n    public static Alive(): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"alive?key=\" + sessionKey\n            var request = this.Request(Requests.Put, url, null)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Открытие профиля\n    public static OpenProfile(username: string): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"get-user-info?key=\" + sessionKey + \"&name=\" + username\n            var request = this.Request(Requests.Get, url, null)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Редактирование данных профиля\n    public static ChangeProfileInfo(data: ProfileInfo): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"set-user-info?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Выход из мессенджера\n    public static Disconnect(): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"disconnect-client?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, null)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Запрос на всех пользователей в мессенджере\n    public static GetAllUsers(): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"all-users?key=\" + sessionKey\n            var request = this.Request(Requests.Get, url, null)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n    \n    // Создание личного диалога\n    public static CratePrivateChat(data: {user: string}): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"create-private-chat?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Создание группового чата\n    public static CreateGroupChat(data: {users: string[], chatName: string, picture: string, type: string, bio: string}): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"create-chat?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Открытие чата\n    public static OpenChat(chatId: string): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"open-chat?key=\" + sessionKey + \"&chatId=\" + chatId\n            var request = this.Request(Requests.Get, url, null)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Удаление чата \n    public static DeleteChat (data: {chatId: string}): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"exit-from-chat?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Редактирование сообщения\n    public static EditMesssage(data: {chatId: string, id: string, text: string, files: {name: string, bytes: string}[]}): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"edit-message?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Отправка сообщения\n    public static SendMessage(data: {chatId: string, text: string, time: string, date: string, files: {name: string, bytes: string}[]}): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"send-message?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n    \n    // Прочтение сообщения\n    public static ReadMessage(data: {chatId: string, id: string}): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"message-read?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Удаление сообщения\n    public static DeleteMessage(data: {chatId: string, id: string}): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"delete-message?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Добавление пользователя в чат\n    public static AddMemberToChat(data: {chatId: string, user: string}): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"add-user-in-chat?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Удаление пользователя из чата\n    public static RemoveMemberFromChat(data: {chatId: string, user: string}): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"delete-user-from-chat?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Добавление администратора в чат\n    public static AddChatAdministrator(data: {chatId: string, user: string}): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"add-admin?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Удаление администратора из чата\n    public static RemoveChatAdministrator(data: {chatId: string, user: string}): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"delete-admin?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Запрос на пользователей, которых нет в чате\n    public static UsersToAddToChat(chatId: string): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"users-to-add-in-chat?key=\" + sessionKey + '&chatId=' + chatId\n            var request = this.Request(Requests.Get, url, null)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Редактирование данных чата\n    public static ChangeChatInfo(data: {chatId: string, chatName: string, bio: string, picture: string, type: string}): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"set-chat-settings?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Подписка на ссе \n    public static SseSubscribe(): EventSource{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            Requests.Sse = new EventSource(Requests.Addres + \"sse?key=\" + sessionKey, {withCredentials:true })\n        }\n        return Requests.Sse\n    }\n}\n"]},"metadata":{},"sourceType":"module"}