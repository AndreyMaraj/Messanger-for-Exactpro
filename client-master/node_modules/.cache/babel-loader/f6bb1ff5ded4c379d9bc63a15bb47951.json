{"ast":null,"code":"import Cookie from './Cookie';\n// Запросы на сервер \nexport default class Requests {\n  // адрес сервера\n  // Проверка ключа сессии на null\n  static CheckingNullKeySession() {\n    var cookieKeySession = Cookie.Get('key'); // Достаем из куки данные\n\n    if (cookieKeySession) {\n      return cookieKeySession;\n    } else {\n      alert('Session key error.');\n      return null;\n    }\n  } // Общий запрос на сервер\n\n\n  static Request(type, url, data) {\n    var request = new XMLHttpRequest();\n    request.open(type, Requests.Addres + url, false);\n    data === null ? request.send() : request.send(JSON.stringify(data));\n    return {\n      responseText: request.responseText,\n      status: request.status\n    };\n  } // Вход в мессенджер\n\n\n  static LogIn(username, password) {\n    var url = \"login?username=\" + username + \"&password=\" + password;\n    var request = this.Request(Requests.Get, url, null);\n    return {\n      responseText: request.responseText,\n      status: request.status\n    };\n  } // Регистрация \n\n\n  static SignIn(data) {\n    var url = \"registration\";\n    var request = this.Request(Requests.Post, url, data);\n    return {\n      responseText: request.responseText,\n      status: request.status\n    };\n  } // Оповещение сервера о том, что клиент на сайте\n\n\n  static Alive() {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"alive?key=\" + sessionKey;\n      var request = this.Request(Requests.Put, url, null);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Открытие профиля\n\n\n  static OpenProfile(username) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"get-user-info?key=\" + sessionKey + \"&name=\" + username;\n      var request = this.Request(Requests.Get, url, null);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Редактирование данных профиля\n\n\n  static ChangeProfileInfo(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"set-user-info?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Выход из мессенджера\n\n\n  static Disconnect() {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"disconnect-client?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, null);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Запрос на всех пользователей в мессенджере\n\n\n  static GetAllUsers() {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"all-users?key=\" + sessionKey;\n      var request = this.Request(Requests.Get, url, null);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Создание личного диалога\n\n\n  static CratePrivateChat(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"create-private-chat?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Создание группового чата\n\n\n  static CreateGroupChat(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"create-chat?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Открытие чата\n\n\n  static OpenChat(chatId) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"open-chat?key=\" + sessionKey + \"&chatId=\" + chatId;\n      var request = this.Request(Requests.Get, url, null);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Удаление чата \n\n\n  static DeleteChat(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"exit-from-chat?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Редактирование сообщения\n\n\n  static EditMesssage(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"edit-message?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Отправка сообщения\n\n\n  static SendMessage(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"send-message?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Прочтение сообщения\n\n\n  static ReadMessage(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"message-read?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Удаление сообщения\n\n\n  static DeleteMessage(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"delete-message?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Добавление пользователя в чат\n\n\n  static AddMemberToChat(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"add-user-in-chat?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Удаление пользователя из чата\n\n\n  static RemoveMemberFromChat(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"delete-user-from-chat?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Добавление администратора в чат\n\n\n  static AddChatAdministrator(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"add-admin?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Удаление администратора из чата\n\n\n  static RemoveChatAdministrator(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"delete-admin?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Запрос на пользователей, которых нет в чате\n\n\n  static UsersToAddToChat(chatId) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"users-to-add-in-chat?key=\" + sessionKey + '&chatId=' + chatId;\n      var request = this.Request(Requests.Get, url, null);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Редактирование данных чата\n\n\n  static ChangeChatInfo(data) {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      var url = \"set-chat-settings?key=\" + sessionKey;\n      var request = this.Request(Requests.Post, url, data);\n      return {\n        responseText: request.responseText,\n        status: request.status\n      };\n    } else {\n      return null;\n    }\n  } // Подписка на ссе \n\n\n  static SseSubscribe() {\n    var sessionKey = Requests.CheckingNullKeySession();\n\n    if (sessionKey) {\n      Requests.Sse = new EventSource(Requests.Addres + \"sse?key=\" + sessionKey, {\n        withCredentials: true\n      });\n    }\n\n    return Requests.Sse;\n  }\n\n}\nRequests.Addres = 'http://127.0.0.1:8081/';\nRequests.Get = 'GET';\nRequests.Post = 'POST';\nRequests.Put = 'PUT';\nRequests.Sse = void 0;","map":{"version":3,"names":["Cookie","Requests","CheckingNullKeySession","cookieKeySession","Get","alert","Request","type","url","data","request","XMLHttpRequest","open","Addres","send","JSON","stringify","responseText","status","LogIn","username","password","SignIn","Post","Alive","sessionKey","Put","OpenProfile","ChangeProfileInfo","Disconnect","GetAllUsers","CratePrivateChat","CreateGroupChat","OpenChat","chatId","DeleteChat","EditMesssage","SendMessage","ReadMessage","DeleteMessage","AddMemberToChat","RemoveMemberFromChat","AddChatAdministrator","RemoveChatAdministrator","UsersToAddToChat","ChangeChatInfo","SseSubscribe","Sse","EventSource","withCredentials"],"sources":["/Users/andrejturin/Документы/Messenger-for-Exactpro/client-master/src/Requests.ts"],"sourcesContent":["import Cookie from './Cookie'\nimport { ProfileInfo } from './interfaces/ProfileInfo'\n\n// Запросы на сервер \nexport default class Requests{\n\n    private static Addres: string = 'http://127.0.0.1:8081/' // адрес сервера\n    private static Get: string = 'GET' \n    private static Post: string = 'POST'\n    private static Put: string = 'PUT'\n    private static Sse: EventSource \n\n    // Проверка ключа сессии на null\n    private static CheckingNullKeySession(): string | null{\n        var cookieKeySession: string | null = Cookie.Get('key') // Достаем из куки данные\n        if(cookieKeySession){\n            return cookieKeySession\n        }\n        else{\n            alert('Session key error.')\n            return null\n        }\n    }\n\n    // Общий запрос на сервер\n    private static Request(type: string, url: string, data: any | null): {responseText: string, status: number}{\n        var request: XMLHttpRequest = new XMLHttpRequest()\n        request.open(type, Requests.Addres + url, false)\n        data === null ? request.send() : request.send(JSON.stringify(data))\n        return {responseText: request.responseText, status: request.status}\n    }\n\n    // Вход в мессенджер\n    public static LogIn(username: string, password: string): {responseText: string, status: number}{\n        var url = \"login?username=\" + username + \"&password=\" + password\n        var request = this.Request(Requests.Get, url, null)\n        return {responseText: request.responseText, status: request.status}\n    }\n\n    // Регистрация \n    public static SignIn(data: {name: string, password: string}): {responseText: string, status: number}{\n        var url = \"registration\"\n        var request = this.Request(Requests.Post, url, data)\n        return {responseText: request.responseText, status: request.status}\n    }\n\n    // Оповещение сервера о том, что клиент на сайте\n    public static Alive(): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"alive?key=\" + sessionKey\n            var request = this.Request(Requests.Put, url, null)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Открытие профиля\n    public static OpenProfile(username: string): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"get-user-info?key=\" + sessionKey + \"&name=\" + username\n            var request = this.Request(Requests.Get, url, null)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Редактирование данных профиля\n    public static ChangeProfileInfo(data: ProfileInfo): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"set-user-info?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Выход из мессенджера\n    public static Disconnect(): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"disconnect-client?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, null)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Запрос на всех пользователей в мессенджере\n    public static GetAllUsers(): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"all-users?key=\" + sessionKey\n            var request = this.Request(Requests.Get, url, null)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n    \n    // Создание личного диалога\n    public static CratePrivateChat(data: {user: string}): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"create-private-chat?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Создание группового чата\n    public static CreateGroupChat(data: {users: string[], chatName: string, picture: string, type: string, bio: string}): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"create-chat?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Открытие чата\n    public static OpenChat(chatId: string): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"open-chat?key=\" + sessionKey + \"&chatId=\" + chatId\n            var request = this.Request(Requests.Get, url, null)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Удаление чата \n    public static DeleteChat (data: {chatId: string}): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"exit-from-chat?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Редактирование сообщения\n    public static EditMesssage(data: {chatId: string, id: string, text: string, files: {name: string, bytes: string}[]}): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"edit-message?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Отправка сообщения\n    public static SendMessage(data: {chatId: string, text: string, time: string, date: string, files: {name: string, bytes: string}[]}): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"send-message?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n    \n    // Прочтение сообщения\n    public static ReadMessage(data: {chatId: string, id: string}): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"message-read?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Удаление сообщения\n    public static DeleteMessage(data: {chatId: string, id: string}): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"delete-message?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Добавление пользователя в чат\n    public static AddMemberToChat(data: {chatId: string, user: string}): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"add-user-in-chat?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Удаление пользователя из чата\n    public static RemoveMemberFromChat(data: {chatId: string, user: string}): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"delete-user-from-chat?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Добавление администратора в чат\n    public static AddChatAdministrator(data: {chatId: string, user: string}): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"add-admin?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Удаление администратора из чата\n    public static RemoveChatAdministrator(data: {chatId: string, user: string}): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"delete-admin?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Запрос на пользователей, которых нет в чате\n    public static UsersToAddToChat(chatId: string): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"users-to-add-in-chat?key=\" + sessionKey + '&chatId=' + chatId\n            var request = this.Request(Requests.Get, url, null)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Редактирование данных чата\n    public static ChangeChatInfo(data: {chatId: string, chatName: string, bio: string, picture: string, type: string}): {responseText: string, status: number} | null{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            var url = \"set-chat-settings?key=\" + sessionKey\n            var request = this.Request(Requests.Post, url, data)\n            return {responseText: request.responseText, status: request.status}\n        }\n        else{\n            return null\n        }\n    }\n\n    // Подписка на ссе \n    public static SseSubscribe(): EventSource{\n        var sessionKey = Requests.CheckingNullKeySession()\n        if(sessionKey){\n            Requests.Sse = new EventSource(Requests.Addres + \"sse?key=\" + sessionKey, {withCredentials:true })\n        }\n        return Requests.Sse\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}