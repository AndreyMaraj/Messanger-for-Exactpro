{"ast":null,"code":"var _jsxFileName = \"/Users/andrejturin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Messenger-for-Exactpro/client-master/src/components/CreateChat.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport Requests from '../Requests';\nimport Profile from './Profile';\nimport UserAvatar from './UserAvatar';\nimport { AppBar, Avatar, Button, Checkbox, Container, FormControlLabel, Grid, IconButton, InputBase, List, ListItem, ListItemAvatar, ListItemSecondaryAction, ListItemText, Switch, TextField, Toolbar, Typography } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport MessageIcon from '@material-ui/icons/Message';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar userProfile = ''; // Создание чата \n\nconst CreateChat = _s(observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    users,\n    profileStore,\n    onlineStatusStore,\n    Done\n  } = _ref;\n  const createDirect = 'CreateDirect'; // элемент\n\n  const profile = 'Profile'; // элемент\n\n  const createGroupChat = 'CreateGroupChat'; // элемент \n\n  const [item, setItem] = useState(createDirect); // Отобаражаемый элемент\n\n  const [lastItem, setLastItem] = useState(''); // Последний отображаемый элемент\n\n  const [groupChatName, setGroupChatName] = useState(\"\"); // Навзание\n\n  const [groupChatBio, setGroupChatBio] = useState(\"\"); // Био\n\n  const [groupChatPicture, setGroupChatPicture] = useState(''); // Фото\n\n  const [groupChatSmartType, setGroupChatSmartType] = useState(false); // Тип\n\n  const [groupChatUsers, setGroupChatUsers] = useState(users.map(() => {\n    return false;\n  })); // Пользователи\n\n  const [searchChat, setSearchChat] = useState(\"\");\n  const smartChat = '2'; // умный чат\n\n  const simpleChat = '3'; // простой чат\n\n  const useStyles = makeStyles(theme => // стили\n  createStyles({\n    content: {\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden'\n    },\n    header: {\n      position: \"static\",\n      flexGrow: 1,\n      height: '10%'\n    },\n    headerButton: {\n      marginLeft: theme.spacing(2),\n      color: 'white',\n      background: '#3d50b6'\n    },\n    createPrivateChat: {\n      width: '100%',\n      position: 'relative',\n      overflow: 'scroll',\n      height: '90%'\n    },\n    profileInfo: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n      alignItems: 'center'\n    },\n    root: {\n      flexGrow: 1\n    },\n    root1: {\n      width: '100%',\n      position: 'relative',\n      overflow: 'auto',\n      height: 500\n    },\n    paper: {\n      marginTop: theme.spacing(4),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      height: '100%'\n    },\n    addButton: {\n      textAlign: 'right'\n    },\n    title: {\n      flexGrow: 1\n    },\n    smallAvatar: {\n      width: theme.spacing(5),\n      height: theme.spacing(5)\n    },\n    largeAvatar: {\n      width: theme.spacing(15),\n      height: theme.spacing(15)\n    },\n    cancelButton: {\n      marginRight: theme.spacing(2),\n      color: 'white',\n      background: '#3d50b6'\n    },\n    saveButton: {\n      marginRight: theme.spacing(2),\n      color: 'white',\n      background: '#3d50b6'\n    },\n    createNewGroupButton: {\n      variant: \"contained\",\n      color: \"primary\"\n    },\n    createNewDialogButton: {\n      variant: \"contained\",\n      color: \"primary\"\n    },\n    setNewPhotoButton: {},\n    editNameButton: {},\n    editBioButton: {},\n    nameInput: {},\n    deletePhotoButton: {\n      background: 'red'\n    },\n    formControl: {\n      margin: theme.spacing(3)\n    },\n    members: {\n      overflow: 'auto',\n      width: 100\n    },\n    demo: {\n      backgroundColor: theme.palette.background.paper\n    },\n    search: {\n      flexGrow: 1,\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto'\n      }\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    inputRoot: {\n      color: 'inherit'\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: '20ch'\n      }\n    }\n  }));\n  const classes = useStyles(); // классы для стилей\n  // открытие профиля\n\n  function OpenProfile() {\n    profileStore.Clear(); // очитска данных о предыдущем профиле\n\n    var request = Requests.OpenProfile(userProfile); // запрос на открытие профиля\n\n    switch (request === null || request === void 0 ? void 0 : request.status) {\n      case 200:\n        break;\n\n      case 401:\n        alert(\"User is not logged in.\");\n        break;\n\n      default:\n        alert(\"Error.\");\n        break;\n    }\n  } // загрузка файла\n\n\n  function LoadPic(event) {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n      var _reader$result;\n\n      // событие при загрузки файла\n      var file = (_reader$result = reader.result) === null || _reader$result === void 0 ? void 0 : _reader$result.toString();\n\n      if (file) {\n        setGroupChatPicture(file);\n      }\n    });\n\n    reader.onerror = error => {\n      // событие при ошибке при загрузке файла\n      alert('Error: ' + error);\n    };\n\n    reader.readAsDataURL(event.target.files[0]); // загрузка файла\n  } // создание личного диалога\n\n\n  function CreatePrivateChat(user) {\n    let data = {\n      // подготовка данных для отправки на сервер\n      user: user\n    };\n    var request = Requests.CratePrivateChat(data); // запрос на сервер о создании личного диалога\n\n    switch (request === null || request === void 0 ? void 0 : request.status) {\n      case 200:\n        Done(JSON.parse(request.responseText).chatId); // открытие диалога\n\n        break;\n\n      case 401:\n        alert(\"User is not logged in.\");\n        break;\n\n      case 409:\n        Done(JSON.parse(request.responseText).chatId); // открытие диалога, если он уже создан\n\n        break;\n\n      default:\n        alert(\"Error.\");\n        break;\n    }\n  } // создание группового чата\n\n\n  function CreateGroupChat() {\n    var chatUsers = [];\n    users.map((user, index) => {\n      // определение отмеченных пользователей для добавления в чат\n      if (groupChatUsers[index]) {\n        chatUsers.push(user.name);\n      }\n    });\n\n    if (chatUsers.length !== 0 && groupChatName !== \"\") {\n      // если выбраны пользователи и задано имя чата\n      let data = {\n        // подготовка данных для отправки на сервер\n        users: chatUsers,\n        chatName: groupChatName,\n        picture: groupChatPicture,\n        type: groupChatSmartType ? smartChat : simpleChat,\n        bio: groupChatBio\n      };\n      var request = Requests.CreateGroupChat(data); // запрос на сервер о создании группового чата\n\n      switch (request === null || request === void 0 ? void 0 : request.status) {\n        case 200:\n          Done(JSON.parse(request.responseText).chatId); // Открытие чата\n\n          break;\n\n        case 401:\n          alert(\"User is not logged in.\");\n          break;\n\n        case 409:\n          alert(\"Chat creation error.\");\n          break;\n\n        default:\n          alert(\"Error.\");\n          break;\n      }\n    } else {\n      alert('Name the chat and add users.');\n    }\n  }\n\n  function SetItem() {\n    switch (item) {\n      case createDirect:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.content,\n          children: [/*#__PURE__*/_jsxDEV(AppBar, {\n            className: classes.header,\n            children: /*#__PURE__*/_jsxDEV(Toolbar, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => Done(null),\n                className: classes.headerButton,\n                variant: \"outlined\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.search,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.searchIcon,\n                  children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n                  placeholder: \"Search\\u2026\",\n                  classes: {\n                    root: classes.inputRoot,\n                    input: classes.inputInput\n                  },\n                  inputProps: {\n                    'aria-label': 'search'\n                  },\n                  value: searchChat,\n                  onChange: event => setSearchChat(event.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            dense: true,\n            className: classes.createPrivateChat,\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setItem(createGroupChat),\n                className: classes.createNewGroupButton,\n                fullWidth: true,\n                children: \"New group\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 19\n            }, this), users.map((user, index) => {\n              if (!user.name.includes(searchChat)) {\n                return null;\n              }\n\n              return /*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(UserAvatar, {\n                    user: {\n                      name: user.name,\n                      picture: user.picture\n                    },\n                    onlineStatusStore: onlineStatusStore,\n                    size: 5\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: user.name,\n                  onClick: () => {\n                    userProfile = user.name;\n                    setLastItem(createDirect);\n                    setItem(profile);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    edge: \"end\",\n                    \"aria-label\": \"add\",\n                    onClick: () => CreatePrivateChat(user.name),\n                    children: /*#__PURE__*/_jsxDEV(MessageIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 338,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 23\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 15\n        }, this);\n\n      case createGroupChat:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(AppBar, {\n            position: \"static\",\n            children: /*#__PURE__*/_jsxDEV(Toolbar, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => Done(null),\n                className: classes.cancelButton,\n                variant: \"outlined\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.title,\n                variant: \"h6\",\n                noWrap: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => CreateGroupChat(),\n                className: classes.saveButton,\n                variant: \"outlined\",\n                children: \"Done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Container, {\n            className: classes.profileInfo,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: true,\n                className: classes.paper,\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  src: groupChatPicture,\n                  className: classes.largeAvatar\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  component: \"label\",\n                  className: classes.setNewPhotoButton,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    onChange: event => LoadPic(event),\n                    hidden: true,\n                    accept: \".png, .jpg, .jpeg, .svg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 25\n                  }, this), \"Set A Photo\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 23\n                }, this), groupChatPicture !== '' ? /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  className: classes.deletePhotoButton,\n                  onClick: () => setGroupChatPicture(''),\n                  children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 27\n                  }, this), \"Delete\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 25\n                }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Name\",\n                    variant: \"standard\",\n                    value: groupChatName,\n                    className: classes.editNameButton,\n                    onChange: event => setGroupChatName(event.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Bio\",\n                    variant: \"standard\",\n                    value: groupChatBio,\n                    className: classes.editBioButton,\n                    onChange: event => setGroupChatBio(event.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    control: /*#__PURE__*/_jsxDEV(Switch, {\n                      color: \"primary\",\n                      checked: groupChatSmartType,\n                      onChange: event => setGroupChatSmartType(event.target.checked)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 433,\n                      columnNumber: 36\n                    }, this),\n                    label: \"Smart Type\",\n                    labelPlacement: \"start\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: true,\n                className: classes.paper,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    className: classes.title,\n                    children: \"Members\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 447,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.demo,\n                    children: /*#__PURE__*/_jsxDEV(List, {\n                      dense: true,\n                      className: classes.root1,\n                      children: users.map((user, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n                        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                          children: /*#__PURE__*/_jsxDEV(UserAvatar, {\n                            user: {\n                              name: user.name,\n                              picture: user.picture\n                            },\n                            onlineStatusStore: onlineStatusStore,\n                            size: 5\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 463,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 462,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                          primary: user.name,\n                          onClick: () => {\n                            userProfile = user.name;\n                            setLastItem(createGroupChat);\n                            setItem(profile);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 469,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                            color: \"primary\",\n                            edge: \"end\",\n                            checked: groupChatUsers[index],\n                            onChange: () => setGroupChatUsers(groupChatUsers.map((user, index1) => {\n                              if (index1 === index) {\n                                return !groupChatUsers[index1];\n                              } else {\n                                return groupChatUsers[index1];\n                              }\n                            }))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 474,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 473,\n                          columnNumber: 33\n                        }, this)]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 461,\n                        columnNumber: 31\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 456,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this);\n\n      case profile:\n        OpenProfile();\n        return /*#__PURE__*/_jsxDEV(Profile, {\n          profileStore: profileStore,\n          onlineStatusStore: onlineStatusStore,\n          Change: false,\n          Done: () => {\n            lastItem === createGroupChat ? setItem(createGroupChat) : setItem(createDirect);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 13\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 13\n        }, this);\n    }\n  }\n\n  return SetItem();\n}, \"fVx+jYlAsfkqkJ2ukJRP59KJ1R0=\", false, function () {\n  return [useStyles];\n})), \"fVx+jYlAsfkqkJ2ukJRP59KJ1R0=\", true);\n\n_c2 = CreateChat;\nexport default CreateChat;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreateChat$observer\");\n$RefreshReg$(_c2, \"CreateChat\");","map":{"version":3,"names":["React","useState","observer","Requests","Profile","UserAvatar","AppBar","Avatar","Button","Checkbox","Container","FormControlLabel","Grid","IconButton","InputBase","List","ListItem","ListItemAvatar","ListItemSecondaryAction","ListItemText","Switch","TextField","Toolbar","Typography","createStyles","makeStyles","MessageIcon","DeleteIcon","SearchIcon","userProfile","CreateChat","users","profileStore","onlineStatusStore","Done","createDirect","profile","createGroupChat","item","setItem","lastItem","setLastItem","groupChatName","setGroupChatName","groupChatBio","setGroupChatBio","groupChatPicture","setGroupChatPicture","groupChatSmartType","setGroupChatSmartType","groupChatUsers","setGroupChatUsers","map","searchChat","setSearchChat","smartChat","simpleChat","useStyles","theme","content","width","height","overflow","header","position","flexGrow","headerButton","marginLeft","spacing","color","background","createPrivateChat","profileInfo","marginTop","display","flexDirection","alignItems","root","root1","paper","addButton","textAlign","title","smallAvatar","largeAvatar","cancelButton","marginRight","saveButton","createNewGroupButton","variant","createNewDialogButton","setNewPhotoButton","editNameButton","editBioButton","nameInput","deletePhotoButton","formControl","margin","members","demo","backgroundColor","palette","search","borderRadius","shape","breakpoints","up","searchIcon","padding","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","classes","OpenProfile","Clear","request","status","alert","LoadPic","event","reader","FileReader","addEventListener","file","result","toString","onerror","error","readAsDataURL","target","files","CreatePrivateChat","user","data","CratePrivateChat","JSON","parse","responseText","chatId","CreateGroupChat","chatUsers","index","push","name","length","chatName","picture","type","bio","SetItem","input","value","includes","checked","index1"],"sources":["/Users/andrejturin/Документы/Messenger-for-Exactpro/client-master/src/components/CreateChat.tsx"],"sourcesContent":["import React, {ChangeEvent, useState} from 'react'\nimport { observer } from 'mobx-react'\nimport Requests from '../Requests'\nimport Profile from './Profile'\nimport UserAvatar from './UserAvatar'\nimport OnlineStatusStore from '../stores/OnlineStatusStore'\nimport ProfileStore from '../stores/ProfileStore'\nimport { UserInfo } from '../interfaces/UserInfo'\nimport { AppBar, Avatar, Button, Checkbox, Container, CssBaseline, FormControlLabel, Grid, IconButton, InputBase, List, ListItem, ListItemAvatar, ListItemSecondaryAction, ListItemText, Switch, TextField, Toolbar, Typography } from '@material-ui/core'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport MessageIcon from '@material-ui/icons/Message'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport SearchIcon from '@material-ui/icons/Search';\n\nvar userProfile: string = ''\n\n// Создание чата \nconst CreateChat = observer(({users, profileStore, onlineStatusStore, Done}: { users: UserInfo[], profileStore: ProfileStore, onlineStatusStore: OnlineStatusStore, Done: (chatId: string | null) => void}) => {\n\n  const createDirect = 'CreateDirect' // элемент\n  const profile = 'Profile' // элемент\n  const createGroupChat = 'CreateGroupChat' // элемент \n  const [item, setItem] = useState<string>(createDirect) // Отобаражаемый элемент\n  const [lastItem, setLastItem] = useState<string>('') // Последний отображаемый элемент\n  const [groupChatName, setGroupChatName] = useState<string>(\"\") // Навзание\n  const [groupChatBio, setGroupChatBio] = useState<string>(\"\") // Био\n  const [groupChatPicture, setGroupChatPicture] = useState<string>('') // Фото\n  const [groupChatSmartType, setGroupChatSmartType] = useState<boolean>(false) // Тип\n  const [groupChatUsers, setGroupChatUsers] = useState<boolean[]>(users.map(()=>{ return false })) // Пользователи\n  const [searchChat, setSearchChat] = useState<string>(\"\")\n  const smartChat = '2' // умный чат\n  const simpleChat = '3' // простой чат\n\n  const useStyles = makeStyles((theme: Theme) => // стили\n    createStyles({\n      content: {\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden'\n      },\n      header: {\n          position: \"static\",\n          flexGrow: 1,\n          height: '10%'\n      },\n      headerButton: {\n          marginLeft: theme.spacing(2),\n          color: 'white',\n          background: '#3d50b6'\n      },\n      createPrivateChat: {\n        width: '100%',\n        position: 'relative',\n        overflow: 'scroll',\n        height: '90%'\n      },\n      profileInfo: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        alignItems: 'center'\n      },\n      root: {\n        flexGrow: 1\n      },\n      root1: {\n        width: '100%',\n        position: 'relative',\n        overflow: 'auto',\n        height: 500\n      },  \n      paper: {\n        marginTop: theme.spacing(4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        height: '100%'\n      },\n      addButton: {\n        textAlign: 'right'\n      },\n      title: {\n        flexGrow: 1\n      },\n      smallAvatar: {\n        width: theme.spacing(5),\n        height: theme.spacing(5)\n      },\n      largeAvatar: {\n        width: theme.spacing(15),\n        height: theme.spacing(15)\n      },\n      cancelButton: {\n        marginRight: theme.spacing(2),\n        color: 'white',\n        background: '#3d50b6'\n      },\n      saveButton: {\n        marginRight: theme.spacing(2),\n        color: 'white',\n        background: '#3d50b6'\n      },  \n      createNewGroupButton: {\n        variant: \"contained\",\n        color: \"primary\"\n      },\n      createNewDialogButton: {\n        variant: \"contained\",\n        color: \"primary\"\n      },\n      setNewPhotoButton: {\n\n      },\n      editNameButton: {\n\n      },\n      editBioButton: {\n\n      },\n      nameInput: {\n\n      },\n      deletePhotoButton: {\n        background: 'red'\n      },\n      formControl: {\n        margin: theme.spacing(3)\n      },\n      members: {\n        overflow: 'auto',\n        width: 100\n      },\n      demo: {\n        backgroundColor: theme.palette.background.paper\n      },\n      search: {\n        flexGrow: 1,\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n          marginLeft: theme.spacing(3),\n          width: 'auto',\n        },\n      },\n      searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n      inputRoot: {\n        color: 'inherit',\n      },\n      inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n          width: '20ch',\n        },\n      }\n    })\n  )\n  const classes = useStyles() // классы для стилей\n\n  // открытие профиля\n  function OpenProfile(): void {\n    profileStore.Clear() // очитска данных о предыдущем профиле\n    var request: {responseText: string, status: number} | null = Requests.OpenProfile(userProfile) // запрос на открытие профиля\n    switch(request?.status){\n      case 200:\n        break\n      case 401:\n        alert(\"User is not logged in.\")\n        break\n      default:\n        alert(\"Error.\")\n        break\n    }     \n  }\n\n  // загрузка файла\n  function LoadPic(event: any){\n    const reader: FileReader = new FileReader()\n    reader.addEventListener(\"load\", ()=>{ // событие при загрузки файла\n      var file: string | undefined = reader.result?.toString()\n      if(file){\n        setGroupChatPicture(file)\n      }\n    })\n    reader.onerror = (error) => { // событие при ошибке при загрузке файла\n      alert('Error: ' + error)\n    }\n    reader.readAsDataURL(event.target.files[0]) // загрузка файла\n  }\n\n  // создание личного диалога\n  function CreatePrivateChat(user: string): void{\n    let data = { // подготовка данных для отправки на сервер\n      user: user\n    }\n    var request: {responseText: string, status: number} | null = Requests.CratePrivateChat(data) // запрос на сервер о создании личного диалога\n    switch(request?.status){\n      case 200:\n        Done(JSON.parse(request.responseText).chatId) // открытие диалога\n        break\n      case 401:\n        alert(\"User is not logged in.\")\n        break\n      case 409:\n        Done(JSON.parse(request.responseText).chatId) // открытие диалога, если он уже создан\n        break\n      default:\n        alert(\"Error.\")\n        break\n    }\n  }\n\n  // создание группового чата\n  function CreateGroupChat(): void{\n    var chatUsers: string [] = []\n    users.map((user: UserInfo, index: number)=>{ // определение отмеченных пользователей для добавления в чат\n      if (groupChatUsers[index]){\n        chatUsers.push(user.name) \n      }\n    })\n    if (chatUsers.length !== 0 && groupChatName !== \"\"){ // если выбраны пользователи и задано имя чата\n      let data: {users: string[], chatName: string, picture: string, type: string, bio: string} = { // подготовка данных для отправки на сервер\n        users: chatUsers,\n        chatName: groupChatName,\n        picture: groupChatPicture,\n        type: groupChatSmartType ? smartChat : simpleChat,\n        bio: groupChatBio\n      }\n      var request: {responseText: string, status: number} | null = Requests.CreateGroupChat(data) // запрос на сервер о создании группового чата\n      switch(request?.status){\n        case 200:\n          Done(JSON.parse(request.responseText).chatId) // Открытие чата\n          break\n        case 401:\n          alert(\"User is not logged in.\")\n          break\n        case 409:\n          alert(\"Chat creation error.\")\n          break\n        default:\n          alert(\"Error.\")\n          break\n      }\n    }\n    else{\n      alert('Name the chat and add users.')\n    }\n  }\n\n  function SetItem(): JSX.Element {\n    switch(item){\n        case createDirect:\n          return(\n              <div \n                className={classes.content}\n              >\n                <AppBar \n                  className={classes.header}\n                >\n                  <Toolbar>\n                    <Button\n                      onClick={()=>Done(null)}\n                      className={classes.headerButton}\n                      variant=\"outlined\"\n                    >\n                      Cancel\n                    </Button>\n                    <div className={classes.search}>\n                      <div className={classes.searchIcon}>\n                          <SearchIcon />\n                      </div>\n                      <InputBase\n                          placeholder=\"Search…\"\n                          classes={{\n                              root: classes.inputRoot,\n                              input: classes.inputInput,\n                          }}\n                          inputProps={{ 'aria-label': 'search' }}\n                          value={searchChat}\n                          onChange={event=>setSearchChat(event.target.value)}\n                      />\n                  </div>\n                  </Toolbar>\n                </AppBar>\n                <List \n                  dense={true}\n                  className={classes.createPrivateChat}\n                >\n                  <ListItem>\n                    <Button \n                      onClick={()=>setItem(createGroupChat)}\n                      className={classes.createNewGroupButton}\n                      fullWidth\n                    >\n                      New group\n                    </Button>\n                  </ListItem>\n                  {users.map((user: UserInfo, index: number) => {\n                    if(!user.name.includes(searchChat)) {\n                      return null;\n                    }\n                    return (\n                      <ListItem \n                        key={index}\n                      >\n                        <ListItemAvatar>\n                          <UserAvatar \n                            user={{name: user.name, picture: user.picture}} \n                            onlineStatusStore={onlineStatusStore}\n                            size={5}\n                          />\n                        </ListItemAvatar>\n                        <ListItemText\n                          primary={user.name}\n                          onClick={()=>{userProfile = user.name; setLastItem(createDirect); setItem(profile)}}\n                        />\n                        <ListItemSecondaryAction>\n                          <IconButton \n                            edge=\"end\" \n                            aria-label=\"add\"\n                            onClick={()=>CreatePrivateChat(user.name)}\n                          >\n                            <MessageIcon/>\n                          </IconButton>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    );\n                  }\n                  )}\n                </List>\n              </div>\n          )\n        case createGroupChat:\n          return(\n            <div>\n              <AppBar position=\"static\">\n                <Toolbar>\n                  <Button\n                    onClick={()=>Done(null)}\n                    className={classes.cancelButton}\n                    variant=\"outlined\"\n                  >\n                    Cancel\n                  </Button>\n                  <Typography \n                    className={classes.title}\n                    variant=\"h6\" \n                    noWrap\n                  />\n                  <Button\n                    onClick={()=>CreateGroupChat()}\n                    className={classes.saveButton}\n                    variant=\"outlined\"\n                  >\n                    Done\n                  </Button>\n                </Toolbar>\n              </AppBar>\n              <Container\n                className={classes.profileInfo}\n              >\n                  <Grid\n                    container\n                  >\n                    <Grid\n                      item\n                      xs\n                      className={classes.paper}\n                    >\n                      <Avatar \n                        src={groupChatPicture} \n                        className={classes.largeAvatar}\n                      />\n                      <Button\n                        variant=\"outlined\"\n                        component=\"label\"\n                        className={classes.setNewPhotoButton}\n                      >\n                        <input\n                            type=\"file\"\n                            onChange={event=>LoadPic(event)}\n                            hidden\n                            accept=\".png, .jpg, .jpeg, .svg\"\n                        />\n                        Set A Photo\n                      </Button>\n                      {groupChatPicture !== '' ?\n                        <Button\n                          variant=\"contained\"\n                          className={classes.deletePhotoButton}\n                          onClick={()=>setGroupChatPicture('')}\n                        >\n                          <DeleteIcon />\n                          Delete\n                        </Button>\n                      : null\n                      }\n                      <div>\n                        <TextField\n                          label=\"Name\"\n                          variant=\"standard\"\n                          value={groupChatName}\n                          className={classes.editNameButton}\n                          onChange={event=>setGroupChatName(event.target.value)}\n                        />\n                      </div>\n                      <div>\n                        <TextField\n                          label=\"Bio\"\n                          variant=\"standard\"\n                          value={groupChatBio}\n                          className={classes.editBioButton}\n                          onChange={event=>setGroupChatBio(event.target.value)}\n                        />\n                      </div>\n                      <div>\n                        <FormControlLabel\n                          control={<Switch color=\"primary\" checked={groupChatSmartType} onChange={(event: ChangeEvent<HTMLInputElement>)=>setGroupChatSmartType(event.target.checked)} />}\n                          label=\"Smart Type\"\n                          labelPlacement=\"start\"\n                        />\n                      </div>\n                    </Grid>\n                    <Grid\n                      item\n                      xs\n                      className={classes.paper}\n                    >\n                      <Grid \n                        item\n                      >\n                        <Typography\n                          variant=\"h6\" \n                          className={classes.title}\n                        >\n                          Members\n                        </Typography>\n                        <div \n                          className={classes.demo}\n                        >\n                          <List \n                            dense={true}\n                            className={classes.root1}\n                          >\n                            {users.map((user: UserInfo, index: number) =>\n                              <ListItem key={index}>\n                                <ListItemAvatar>\n                                  <UserAvatar \n                                    user={{name: user.name, picture: user.picture}} \n                                    onlineStatusStore={onlineStatusStore}\n                                    size={5}\n                                  />\n                                </ListItemAvatar>\n                                <ListItemText\n                                  primary={user.name}\n                                  onClick={()=>{userProfile = user.name; setLastItem(createGroupChat); setItem(profile)}}\n                                />\n                                <ListItemSecondaryAction>\n                                  <Checkbox\n                                    color=\"primary\"\n                                    edge=\"end\"\n                                    checked={groupChatUsers[index]} \n                                    onChange={()=>setGroupChatUsers(groupChatUsers.map((user: boolean,index1: number)=>{if(index1 === index) {return !groupChatUsers[index1]} else{ return groupChatUsers[index1]}}))}\n                                  />\n                                </ListItemSecondaryAction>\n                              </ListItem>,\n                            )}\n                          </List>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n              </Container>\n            </div>\n          )\n        case profile:\n          OpenProfile()\n          return(\n            <Profile \n              profileStore={profileStore} \n              onlineStatusStore={onlineStatusStore}\n              Change={false} \n              Done={()=>{lastItem === createGroupChat ? setItem(createGroupChat) : setItem(createDirect)}}\n            />\n          )\n        default:\n          return(\n            <React.Fragment/>\n          )\n    }\n  }\n  \n  return(\n    SetItem()\n  )\n})\n\nexport default CreateChat"],"mappings":"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"},"metadata":{},"sourceType":"module"}