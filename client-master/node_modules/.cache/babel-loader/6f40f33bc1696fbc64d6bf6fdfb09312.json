{"ast":null,"code":"var _jsxFileName = \"/home/maria/Messenger-for-Exactpro/client-master/src/components/Messages.tsx\",\n    _s = $RefreshSig$();\n\nimport { observer } from 'mobx-react-lite';\nimport Requests from '../Requests';\nimport { Avatar, createStyles, List, ListItem, ListItemAvatar, ListItemText, makeStyles } from '@material-ui/core';\nimport DoneAllIcon from '@material-ui/icons/DoneAll'; // сообщения чата\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messages = observer(_c = _s(({\n  messagesStore,\n  chatInfo,\n  EditMessage\n}) => {\n  _s();\n\n  const useStyles = makeStyles(theme => // стили\n  createStyles({\n    messages: {\n      overflow: 'auto',\n      width: 600,\n      height: 350\n    },\n    myMessage: {\n      backgroundColor: '#00cfff'\n    },\n    anyMessage: {},\n    smallAvatar: {\n      width: theme.spacing(5),\n      height: theme.spacing(5)\n    },\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper\n    }\n  }));\n  const classes = useStyles(); // классы стилей\n  // прочтение сообщения\n\n  function ReadMessage(message) {\n    let data = {\n      // подготовка данных для отправки на сервер \n      chatId: chatInfo.id,\n      id: message.id\n    };\n    var request = Requests.ReadMessage(data); // отправка запроса на сервер о прочтении сообщения\n\n    switch (request === null || request === void 0 ? void 0 : request.status) {\n      case 200:\n        break;\n\n      case 400:\n        alert(\"\");\n        break;\n\n      default:\n        break;\n    }\n  } // Удаление сообщения\n\n\n  function DeleteMessage(messageId) {\n    let data = {\n      // подготовка данных  для отправки на сервер\n      chatId: chatInfo.id,\n      id: messageId\n    };\n    var request = Requests.DeleteMessage(data); // отправка запроса на сервер об удалении сообщения\n\n    switch (request === null || request === void 0 ? void 0 : request.status) {\n      case 200:\n        break;\n\n      case 400:\n        alert(\"\");\n        break;\n\n      default:\n        break;\n    }\n  } // проверка строки на URL\n\n\n  function isURL(str) {\n    try {\n      var url = new URL(str);\n      return url.toString().indexOf('.') !== -1;\n    } catch {\n      return false;\n    }\n  } // запрос на файл\n\n\n  function FileRequest(src) {\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", src, false);\n    request.send();\n\n    switch (request.status) {\n      case 200:\n        break;\n\n      case 400:\n        alert(\"Данные некорректны!\");\n        break;\n\n      default:\n        break;\n    }\n\n    return request.responseText;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.messages,\n    children: /*#__PURE__*/_jsxDEV(List, {\n      className: classes.root,\n      children: messagesStore.messagesData.map((message, index) => {\n        if (chatInfo.id === message.chatId) {\n          // если сообщение из этого чата\n          var messageWithSources = [];\n          var sources = [];\n          var sourcesAttachments = [];\n          var messageTextCopy = message.text; // обрезаем строку на составляющие (строка, ссылка)\n\n          messageTextCopy.replace(/(https?:\\/\\/[^\\s]+)/g, url => {\n            sources[sources.length] = url;\n            messageWithSources[messageWithSources.length] = messageTextCopy.substring(0, messageTextCopy.indexOf(url));\n            messageWithSources[messageWithSources.length] = /*#__PURE__*/_jsxDEV(\"a\", {\n              href: url,\n              target: \"_blank\",\n              children: url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 73\n            }, this);\n\n            if (isURL(url)) {\n              sourcesAttachments[sourcesAttachments.length] = url;\n            }\n\n            messageTextCopy = messageTextCopy.substring(messageTextCopy.indexOf(url) + url.length);\n            return '';\n          });\n          messageWithSources[messageWithSources.length] = messageTextCopy;\n\n          if (!message.read && !message.mine) {\n            ReadMessage(message); // прочтение сообщения\n          }\n\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            className: message.mine ? classes.myMessage : classes.anyMessage,\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                src: message.senderPicture,\n                className: classes.smallAvatar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: messageWithSources,\n              secondary: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [message.time, message.edited ? /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: \"   edited\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 45\n                }, this) : null, message.mine && message.read ? /*#__PURE__*/_jsxDEV(DoneAllIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 45\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this) // <div \n          //     key={index}\n          //     className={message.mine ? classes.myMessage : classes.anyMessage}\n          // >\n          //     {message.time + \" \" + message.sender + \": \"}\n          //     {messageWithSources}\n          //     {sourcesAttachments.map((source: string, i: number)=>{\n          //         if(source.substring(source.lastIndexOf('.')) === '.png' || source.substring(source.lastIndexOf('.')) === '.jpg' || source.substring(source.lastIndexOf('.')) === '.jpeg' || source.substring(source.lastIndexOf('.')) === '.svg'){\n          //             return <img key={i} src={source}/>\n          //         }\n          //         if(source.substring(source.lastIndexOf('.')) === '.mp3'){\n          //             return <audio key={i} controls src={source}/>\n          //         }\n          //         if(source.substring(source.lastIndexOf('.')) === '.mp4'){\n          //             return <video key={i} autoPlay loop muted controls src={source}/>\n          //         }\n          //     })}\n          //     {message.files?.map((file: {name: string, type: string, id: string}, i: number)=>{\n          //         var cookieKeySession: string | null = Cookie.Get('key') // Достаем из куки данные\n          //         if(cookieKeySession){\n          //             return(\n          //                 file.type?.slice(0, file.type?.indexOf('/')) === 'image' ?\n          //                     <img key={i} src={\"http://127.0.0.1:8081/get-file?key=\" + cookieKeySession + \"&chatId=\" + message.chatId + \"&id=\" + file.id}/>\n          //                 : file.type?.slice(0, file.type?.indexOf('/')) === 'video' ?\n          //                     <div>\n          //                         <video key={i} autoPlay loop muted controls src={FileRequest(\"http://127.0.0.1:8081/get-file?key=\" + cookieKeySession + \"&chatId=\" + message.chatId + \"&id=\" + file.id)}></video>\n          //                         <a href={FileRequest(\"http://127.0.0.1:8081/get-file?key=\" + cookieKeySession + \"&chatId=\" + message.chatId + \"&id=\" + file.id)} download={file.name}><button>Download</button></a>\n          //                     </div>\n          //                 : file.type?.slice(0, file.type?.indexOf('/')) === 'audio' ?\n          //                     <div>\n          //                         <audio key={i} controls src={FileRequest(\"http://127.0.0.1:8081/get-file?key=\" + cookieKeySession + \"&chatId=\" + message.chatId + \"&id=\" + file.id)} />\n          //                         <a href={FileRequest(\"http://127.0.0.1:8081/get-file?key=\" + cookieKeySession + \"&chatId=\" + message.chatId + \"&id=\" + file.id)} download={file.name}><button>Download</button></a>\n          //                     </div>\n          //                 :\n          //                     <a key={i} href={FileRequest(\"http://127.0.0.1:8081/get-file?key=\" + cookieKeySession + \"&chatId=\" + message.chatId + \"&id=\" + file.id)} download={file.name}><button>{file.name}</button></a>\n          //             )\n          //         }\n          //     })\n          //     }\n          //     {message.edited ?\n          //         <a>   edited</a>\n          //     : null\n          //     }\n          //     {message.mine && message.read ?\n          //         <a>   read</a>\n          //     : null\n          //     }\n          //     {message.mine ?\n          //         <Button onClick={()=>EditMessage(message)}>Edit</Button>\n          //     : null\n          //     }\n          //     {message.mine || (chatInfo.type === '2' && (chatInfo.role === 'owner' || (chatInfo.role === 'admin' && message.senderRole === 'none'))) ?\n          //         <Button onClick={()=>DeleteMessage(message.id)}>Delete</Button>\n          //     : null\n          //     }\n          // </div>\n          ;\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n}));\n_c2 = Messages;\nexport default Messages;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Messages$observer\");\n$RefreshReg$(_c2, \"Messages\");","map":{"version":3,"sources":["/home/maria/Messenger-for-Exactpro/client-master/src/components/Messages.tsx"],"names":["observer","Requests","Avatar","createStyles","List","ListItem","ListItemAvatar","ListItemText","makeStyles","DoneAllIcon","Messages","messagesStore","chatInfo","EditMessage","useStyles","theme","messages","overflow","width","height","myMessage","backgroundColor","anyMessage","smallAvatar","spacing","root","maxWidth","palette","background","paper","classes","ReadMessage","message","data","chatId","id","request","status","alert","DeleteMessage","messageId","isURL","str","url","URL","toString","indexOf","FileRequest","src","XMLHttpRequest","open","send","responseText","messagesData","map","index","messageWithSources","sources","sourcesAttachments","messageTextCopy","text","replace","length","substring","read","mine","senderPicture","time","edited"],"mappings":"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","sourcesContent":["import {observer} from 'mobx-react-lite'\nimport Cookie from '../Cookie'\nimport Requests from '../Requests'\nimport MessagesStore from '../stores/MessagesStore'\nimport {MessagesUpdate} from \"../interfaces/MessagesUpdate\"\nimport { Avatar, Button, createStyles, List, ListItem, ListItemAvatar, ListItemText, makeStyles, Theme } from '@material-ui/core'\nimport { ChatsUpdate } from '../interfaces/ChatsUpdate'\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\n\n// сообщения чата\nconst Messages = observer(({messagesStore, chatInfo, EditMessage}:{messagesStore: MessagesStore, chatInfo: ChatsUpdate, EditMessage: (message: MessagesUpdate)=> void})=>{\n\n    const useStyles = makeStyles((theme: Theme) => // стили\n        createStyles({\n            messages: {\n                overflow: 'auto',\n                width: 600,\n                height: 350\n            },\n            myMessage: {\n                backgroundColor: '#00cfff'\n            },\n            anyMessage: {\n\n            },\n            smallAvatar: {\n                width: theme.spacing(5),\n                height: theme.spacing(5)\n            },\n            root: {\n                width: '100%',\n                maxWidth: 360,\n                backgroundColor: theme.palette.background.paper,\n            },\n        })\n    )\n    const classes = useStyles() // классы стилей\n\n    // прочтение сообщения\n    function ReadMessage(message: MessagesUpdate): void{\n        let data: {chatId: string, id: string} = { // подготовка данных для отправки на сервер \n            chatId: chatInfo.id, \n            id: message.id\n        }\n        var request: {responseText: string, status: number} | null = Requests.ReadMessage(data) // отправка запроса на сервер о прочтении сообщения\n        switch(request?.status){\n            case 200:\n                break\n            case 400:\n                alert(\"\")\n                break\n            default:\n                break\n        }\n    }\n\n    // Удаление сообщения\n    function DeleteMessage(messageId: string): void{\n        let data: {chatId: string, id: string} = { // подготовка данных  для отправки на сервер\n            chatId: chatInfo.id, \n            id: messageId\n        }\n        var request: {responseText: string, status: number} | null = Requests.DeleteMessage(data) // отправка запроса на сервер об удалении сообщения\n        switch(request?.status){\n            case 200:\n                break\n            case 400:\n                alert(\"\")\n                break\n            default:\n                break\n        }\n    }\n\n    // проверка строки на URL\n    function isURL(str: string): boolean{\n        try {\n            var url = new URL(str)\n            return url.toString().indexOf('.') !== -1\n        } \n        catch {\n            return false\n        }\n    }\n\n    // запрос на файл\n    function FileRequest(src: string): string{\n        var request: XMLHttpRequest = new XMLHttpRequest()\n        request.open(\"GET\", src, false)\n        request.send()\n        switch(request.status){\n            case 200:\n                break\n            case 400:\n                alert(\"Данные некорректны!\")\n                break\n            default:\n                break\n        }\n        return request.responseText\n    }\n\n    return (\n        <div \n            className={classes.messages}\n        >\n            <List className={classes.root}>\n            {messagesStore.messagesData.map((message: MessagesUpdate, index: number) => {\n                if (chatInfo.id === message.chatId){ // если сообщение из этого чата\n                    var messageWithSources: any[] = []\n                    var sources: string[] = []\n                    var sourcesAttachments: string[] = []\n                    var messageTextCopy = message.text\n                    // обрезаем строку на составляющие (строка, ссылка)\n                    messageTextCopy.replace(/(https?:\\/\\/[^\\s]+)/g, (url) => {\n                        sources[sources.length] = url\n                        messageWithSources[messageWithSources.length] = messageTextCopy.substring(0, messageTextCopy.indexOf(url))\n                        messageWithSources[messageWithSources.length] = <a href={url} target=\"_blank\">{url}</a>\n                        if (isURL(url)){\n                            sourcesAttachments[sourcesAttachments.length] = url\n                        }\n                        messageTextCopy = messageTextCopy.substring(messageTextCopy.indexOf(url) + url.length)\n                        return ''\n                    })\n                    messageWithSources[messageWithSources.length] = messageTextCopy\n                    if(!message.read && !message.mine){\n                        ReadMessage(message) // прочтение сообщения\n                    }\n                    return(\n                        <ListItem key={index} className={message.mine ? classes.myMessage : classes.anyMessage}>\n                            <ListItemAvatar>\n                                <Avatar \n                                    src={message.senderPicture} \n                                    className={classes.smallAvatar} />\n                            </ListItemAvatar>\n                            <ListItemText primary={messageWithSources} secondary={\n                                    <div>\n                                        {message.time}\n                                        {message.edited ?\n                                            <a>   edited</a>\n                                        : null\n                                        }\n                                        {message.mine && message.read ?\n                                            <DoneAllIcon/>\n                                        : null\n                                        }\n                                    </div>\n                            } />\n                        </ListItem>\n                        // <div \n                        //     key={index}\n                        //     className={message.mine ? classes.myMessage : classes.anyMessage}\n                        // >\n                            \n                        //     {message.time + \" \" + message.sender + \": \"}\n                        //     {messageWithSources}\n                        //     {sourcesAttachments.map((source: string, i: number)=>{\n                        //         if(source.substring(source.lastIndexOf('.')) === '.png' || source.substring(source.lastIndexOf('.')) === '.jpg' || source.substring(source.lastIndexOf('.')) === '.jpeg' || source.substring(source.lastIndexOf('.')) === '.svg'){\n                        //             return <img key={i} src={source}/>\n                        //         }\n                        //         if(source.substring(source.lastIndexOf('.')) === '.mp3'){\n                        //             return <audio key={i} controls src={source}/>\n                        //         }\n                        //         if(source.substring(source.lastIndexOf('.')) === '.mp4'){\n                        //             return <video key={i} autoPlay loop muted controls src={source}/>\n                        //         }\n                        //     })}\n                        //     {message.files?.map((file: {name: string, type: string, id: string}, i: number)=>{\n                        //         var cookieKeySession: string | null = Cookie.Get('key') // Достаем из куки данные\n                        //         if(cookieKeySession){\n                        //             return(\n                        //                 file.type?.slice(0, file.type?.indexOf('/')) === 'image' ?\n                        //                     <img key={i} src={\"http://127.0.0.1:8081/get-file?key=\" + cookieKeySession + \"&chatId=\" + message.chatId + \"&id=\" + file.id}/>\n                        //                 : file.type?.slice(0, file.type?.indexOf('/')) === 'video' ?\n                        //                     <div>\n                        //                         <video key={i} autoPlay loop muted controls src={FileRequest(\"http://127.0.0.1:8081/get-file?key=\" + cookieKeySession + \"&chatId=\" + message.chatId + \"&id=\" + file.id)}></video>\n                        //                         <a href={FileRequest(\"http://127.0.0.1:8081/get-file?key=\" + cookieKeySession + \"&chatId=\" + message.chatId + \"&id=\" + file.id)} download={file.name}><button>Download</button></a>\n                        //                     </div>\n                        //                 : file.type?.slice(0, file.type?.indexOf('/')) === 'audio' ?\n                        //                     <div>\n                        //                         <audio key={i} controls src={FileRequest(\"http://127.0.0.1:8081/get-file?key=\" + cookieKeySession + \"&chatId=\" + message.chatId + \"&id=\" + file.id)} />\n                        //                         <a href={FileRequest(\"http://127.0.0.1:8081/get-file?key=\" + cookieKeySession + \"&chatId=\" + message.chatId + \"&id=\" + file.id)} download={file.name}><button>Download</button></a>\n                        //                     </div>\n                        //                 :\n                        //                     <a key={i} href={FileRequest(\"http://127.0.0.1:8081/get-file?key=\" + cookieKeySession + \"&chatId=\" + message.chatId + \"&id=\" + file.id)} download={file.name}><button>{file.name}</button></a>\n                        //             )\n                        //         }\n                        //     })\n                        //     }\n                        //     {message.edited ?\n                        //         <a>   edited</a>\n                        //     : null\n                        //     }\n                        //     {message.mine && message.read ?\n                        //         <a>   read</a>\n                        //     : null\n                        //     }\n                        //     {message.mine ?\n                        //         <Button onClick={()=>EditMessage(message)}>Edit</Button>\n                        //     : null\n                        //     }\n                        //     {message.mine || (chatInfo.type === '2' && (chatInfo.role === 'owner' || (chatInfo.role === 'admin' && message.senderRole === 'none'))) ?\n                        //         <Button onClick={()=>DeleteMessage(message.id)}>Delete</Button>\n                        //     : null\n                        //     }\n                        // </div>\n                    )\n                }\n            })}\n            </List>\n        </div>\n    )\n})\n\nexport default Messages"]},"metadata":{},"sourceType":"module"}