{"ast":null,"code":"var _jsxFileName = \"/Users/andrejturin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Messenger-for-Exactpro/client-master/src/components/UserAvatar.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { Avatar, Badge, createStyles, makeStyles, withStyles } from '@material-ui/core'; // Аватар пользователя\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserAvatar = _s(observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    user,\n    onlineStatusStore,\n    size\n  } = _ref;\n  const [status, setStatus] = useState(false); // \"Онлайн\" статус пользователя\n\n  const useStyles = makeStyles(theme => // Стили\n  createStyles({\n    avatar: {\n      width: theme.spacing(size),\n      height: theme.spacing(size)\n    }\n  }));\n  const classes = useStyles(); // Классы стилей\n  // обновление статуса \n\n  function Status() {\n    setTimeout(Update, 16000);\n    const d1 = new Date();\n    const d2 = onlineStatusStore.userTimes.get(user.name);\n\n    if (d2 !== undefined) {\n      if (d1.getTime() >= d2.getTime() + 15000) {\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      return false;\n    }\n  } // Проверка на значение статуса \"онлайн\" пользователя\n\n\n  function Update() {\n    const d1 = new Date(); // Время сейчас\n\n    const d2 = onlineStatusStore.userTimes.get(user.name); // Время последнего пребывания \"онлайн\" пользователя\n\n    if (d2 !== undefined) {\n      if (d1.getTime() >= d2.getTime() + 15000) {\n        // Сравнение времени последнего пребывания \"онлайн\" пользователя \n        setStatus(false);\n      } else {\n        setStatus(true);\n      }\n    } else {\n      setStatus(false); // Если нет информации - пользователь не \"онлайн\"\n    }\n  }\n\n  const StyledBadge = withStyles(theme => // Аватарка с \"оналайн\" статусом\n  createStyles({\n    badge: {\n      backgroundColor: '#44b700',\n      color: '#44b700',\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n      '&::after': {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        borderRadius: '50%',\n        animation: '$ripple 1.2s infinite ease-in-out',\n        border: '1px solid currentColor',\n        content: '\"\"'\n      }\n    },\n    '@keyframes ripple': {\n      '0%': {\n        transform: 'scale(.8)',\n        opacity: 1\n      },\n      '100%': {\n        transform: 'scale(2.4)',\n        opacity: 0\n      }\n    }\n  }))(Badge);\n  return Status() ? /*#__PURE__*/_jsxDEV(StyledBadge, {\n    overlap: \"circle\",\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'right'\n    },\n    variant: \"dot\",\n    children: /*#__PURE__*/_jsxDEV(Avatar, {\n      src: user.picture,\n      className: classes.avatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n    src: user.picture,\n    className: classes.avatar\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 13\n  }, this);\n}, \"HpAKb7lJKQz3cGeAvY3eBbFe0Uc=\", false, function () {\n  return [useStyles];\n})), \"HpAKb7lJKQz3cGeAvY3eBbFe0Uc=\", true);\n\n_c2 = UserAvatar;\nexport default UserAvatar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserAvatar$observer\");\n$RefreshReg$(_c2, \"UserAvatar\");","map":{"version":3,"names":["useState","observer","Avatar","Badge","createStyles","makeStyles","withStyles","UserAvatar","user","onlineStatusStore","size","status","setStatus","useStyles","theme","avatar","width","spacing","height","classes","Status","setTimeout","Update","d1","Date","d2","userTimes","get","name","undefined","getTime","StyledBadge","badge","backgroundColor","color","boxShadow","palette","background","paper","position","top","left","borderRadius","animation","border","content","transform","opacity","vertical","horizontal","picture"],"sources":["/Users/andrejturin/Документы/Messenger-for-Exactpro/client-master/src/components/UserAvatar.tsx"],"sourcesContent":["import {useState} from 'react'\nimport {observer} from 'mobx-react';\nimport OnlineStatusStore from '../stores/OnlineStatusStore';\nimport { Avatar, Badge, createStyles, makeStyles, Theme, withStyles } from '@material-ui/core';\n\n// Аватар пользователя\nconst UserAvatar = observer(({user, onlineStatusStore, size}: {user: {name: string, picture: string}, onlineStatusStore: OnlineStatusStore, size: number}) => {\n\n    const [status, setStatus] = useState<boolean>(false) // \"Онлайн\" статус пользователя\n\n    const useStyles = makeStyles((theme: Theme) => // Стили\n        createStyles({\n            avatar: {\n                width: theme.spacing(size),\n                height: theme.spacing(size)\n            }\n        })\n    )\n    const classes = useStyles() // Классы стилей\n\n    // обновление статуса \n    function Status(): boolean {\n        setTimeout(Update, 16000)\n        const d1: Date = new Date()\n        const d2: Date | undefined = onlineStatusStore.userTimes.get(user.name)\n        if (d2 !== undefined){\n            if (d1.getTime() >= d2.getTime() + 15000){\n                return (false)\n            }\n            else {\n                return (true)\n            }\n        }\n        else {\n            return (false)\n        }\n    }\n    \n    // Проверка на значение статуса \"онлайн\" пользователя\n    function Update(): void {\n        const d1: Date = new Date() // Время сейчас\n        const d2: Date | undefined = onlineStatusStore.userTimes.get(user.name) // Время последнего пребывания \"онлайн\" пользователя\n        if (d2 !== undefined){\n            if (d1.getTime() >= d2.getTime() + 15000){ // Сравнение времени последнего пребывания \"онлайн\" пользователя \n                setStatus (false)\n            }\n            else {\n                setStatus (true)\n            }\n        }\n        else {\n            setStatus (false) // Если нет информации - пользователь не \"онлайн\"\n        }\n    }\n    const StyledBadge = withStyles((theme: Theme) => // Аватарка с \"оналайн\" статусом\n        createStyles({\n            badge: {\n                backgroundColor: '#44b700',\n                color: '#44b700',\n                boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n                '&::after': {\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                    borderRadius: '50%',\n                    animation: '$ripple 1.2s infinite ease-in-out',\n                    border: '1px solid currentColor',\n                    content: '\"\"'\n                }\n            },\n            '@keyframes ripple': {\n                '0%': {\n                    transform: 'scale(.8)',\n                    opacity: 1\n                },\n                '100%': {\n                    transform: 'scale(2.4)',\n                    opacity: 0\n                }\n            }\n        })\n    )(Badge)\n\n    return (\n        Status() ?\n            <StyledBadge\n                overlap=\"circle\"\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                variant=\"dot\"\n            >\n                <Avatar \n                    src={user.picture} \n                    className={classes.avatar}\n                />\n            </StyledBadge>\n        :\n            <Avatar \n                src={user.picture} \n                className={classes.avatar}\n            />\n    )\n    \n})\n\nexport default UserAvatar\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}