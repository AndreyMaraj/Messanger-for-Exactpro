{"ast":null,"code":"var _jsxFileName = \"/home/maria/Messenger-for-Exactpro/client-master/src/components/ChangeChatInfo.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Requests from '../Requests';\nimport { AppBar, Avatar, Button, Container, createStyles, FormControlLabel, makeStyles, Switch, TextField, Toolbar, Typography } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete'; // Редактирование информации чата\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChangeChatInfo = props => {\n  _s();\n\n  const [newGroupChatName, setNewGroupChatName] = useState(props.chatInfo.title); // название\n\n  const [newGroupChatBio, setNewGroupChatBio] = useState(props.chatInfo.bio); // био\n\n  const [newGroupChatPicture, setNewGroupChatPicture] = useState(props.chatInfo.picture); // фото\n\n  const [newGroupChatSmartType, setNewGroupChatSmartType] = useState(props.chatInfo.type === '2' ? true : false); //тип\n\n  const useStyles = makeStyles(theme => //стили\n  createStyles({\n    content: {\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden'\n    },\n    header: {\n      position: \"static\",\n      flexGrow: 1,\n      height: '10%'\n    },\n    headerTitle: {\n      flexGrow: 1\n    },\n    headerButton: {\n      marginRight: theme.spacing(2),\n      color: 'white',\n      background: '#3d50b6'\n    },\n    changeChatInfo: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n      alignItems: 'center'\n    },\n    largeAvatar: {\n      width: theme.spacing(15),\n      height: theme.spacing(15)\n    },\n    setNewPhotoButton: {},\n    deletePhotoButton: {\n      background: 'red'\n    },\n    editNameButton: {},\n    editBioButton: {}\n  }));\n  const classes = useStyles(); // классы стилей\n  // Загрузка файла\n\n  function LoadPic(event) {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n      var _reader$result;\n\n      var file = (_reader$result = reader.result) === null || _reader$result === void 0 ? void 0 : _reader$result.toString();\n\n      if (file) {\n        setNewGroupChatPicture(file);\n      }\n    });\n\n    reader.onerror = error => {\n      alert('Error: ' + error);\n    };\n\n    reader.readAsDataURL(event.target.files[0]);\n  } // Сохранение изменений\n\n\n  function SaveChanges() {\n    let data = {\n      // формирование данных для запроса на сервер\n      chatId: props.chatInfo.id,\n      chatName: newGroupChatName,\n      bio: newGroupChatBio,\n      picture: newGroupChatPicture,\n      type: newGroupChatSmartType ? '2' : '3'\n    };\n    var request = Requests.ChangeChatInfo(data); // запрос на сохранение данных о профиле\n\n    switch (request === null || request === void 0 ? void 0 : request.status) {\n      case 200:\n        props.Done();\n        break;\n\n      case 401:\n        alert(\"User is not logged in.\");\n        break;\n\n      case 403:\n        alert(\"User has insufficient rights.\");\n        break;\n\n      default:\n        alert(\"Error.\");\n        break;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.content,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      className: classes.header,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => props.Done(),\n          className: classes.headerButton,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.headerTitle,\n          variant: \"h6\",\n          noWrap: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => SaveChanges(),\n          variant: \"outlined\",\n          className: classes.headerButton,\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.changeChatInfo,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: newGroupChatPicture,\n        className: classes.largeAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        component: \"label\",\n        className: classes.setNewPhotoButton,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: event => LoadPic(event),\n          hidden: true,\n          accept: \".png, .jpg, .jpeg, .svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this), \"Set New Photo\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this), newGroupChatPicture !== null ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        className: classes.deletePhotoButton,\n        onClick: () => setNewGroupChatPicture(''),\n        children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 29\n        }, this), \"Delete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }, this) : null, /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Name\",\n        variant: \"standard\",\n        value: newGroupChatName,\n        className: classes.editNameButton,\n        onChange: event => setNewGroupChatName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Bio\",\n        variant: \"standard\",\n        value: newGroupChatBio,\n        className: classes.editBioButton,\n        onChange: event => setNewGroupChatBio(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this), props.chatInfo.role === 'owner' ? /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Switch, {\n          color: \"primary\",\n          checked: newGroupChatSmartType,\n          onChange: event => setNewGroupChatSmartType(event.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 38\n        }, this),\n        label: \"Smart Type\",\n        labelPlacement: \"start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ChangeChatInfo, \"hFoUfgKcE9X16HJt5ozcQpEGhB0=\", true);\n\n_c = ChangeChatInfo;\nexport default ChangeChatInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeChatInfo\");","map":{"version":3,"sources":["/home/maria/Messenger-for-Exactpro/client-master/src/components/ChangeChatInfo.tsx"],"names":["useState","Requests","AppBar","Avatar","Button","Container","createStyles","FormControlLabel","makeStyles","Switch","TextField","Toolbar","Typography","DeleteIcon","ChangeChatInfo","props","newGroupChatName","setNewGroupChatName","chatInfo","title","newGroupChatBio","setNewGroupChatBio","bio","newGroupChatPicture","setNewGroupChatPicture","picture","newGroupChatSmartType","setNewGroupChatSmartType","type","useStyles","theme","content","width","height","overflow","header","position","flexGrow","headerTitle","headerButton","marginRight","spacing","color","background","changeChatInfo","marginTop","display","flexDirection","alignItems","largeAvatar","setNewPhotoButton","deletePhotoButton","editNameButton","editBioButton","classes","LoadPic","event","reader","FileReader","addEventListener","file","result","toString","onerror","error","alert","readAsDataURL","target","files","SaveChanges","data","chatId","id","chatName","request","status","Done","value","role","checked"],"mappings":"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","sourcesContent":["import {ChangeEvent, useState} from 'react'\nimport Requests from '../Requests'\nimport { ChatsUpdate } from \"../interfaces/ChatsUpdate\"\nimport { AppBar, Avatar, Button, Container, createStyles, FormControlLabel, makeStyles, Switch, TextField, Theme, Toolbar, Typography } from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n// Редактирование информации чата\nconst ChangeChatInfo = (props: {chatInfo: ChatsUpdate, Done: ()=> void}) => {\n    \n    const [newGroupChatName, setNewGroupChatName] = useState<string>(props.chatInfo.title)  // название\n    const [newGroupChatBio, setNewGroupChatBio] = useState<string>(props.chatInfo.bio) // био\n    const [newGroupChatPicture, setNewGroupChatPicture] = useState<string>(props.chatInfo.picture) // фото\n    const [newGroupChatSmartType, setNewGroupChatSmartType] = useState<boolean>(props.chatInfo.type === '2' ? true : false) //тип\n    const useStyles = makeStyles((theme: Theme) => //стили\n        createStyles({\n            content: {\n                width: '100%',\n                height: '100%',\n                overflow: 'hidden'\n            },\n            header: {\n                position: \"static\",\n                flexGrow: 1,\n                height: '10%'\n            },\n            headerTitle: {\n                flexGrow: 1\n            },\n            headerButton: {\n                marginRight: theme.spacing(2),\n                color: 'white',\n                background: '#3d50b6'\n            },\n            changeChatInfo: {\n                marginTop: theme.spacing(8),\n                display: 'flex',\n                flexDirection: 'column',\n                height: '100%',\n                alignItems: 'center'\n            },\n            largeAvatar: {\n                width: theme.spacing(15),\n                height: theme.spacing(15)\n            },\n            setNewPhotoButton: {\n\n            },\n            deletePhotoButton: {\n                background: 'red'\n            },\n            editNameButton: {\n\n            },\n            editBioButton: {\n\n            }\n        })\n    )\n    const classes = useStyles() // классы стилей\n\n    // Загрузка файла\n    function LoadPic(event: any): void {\n        const reader: FileReader = new FileReader()\n        reader.addEventListener(\"load\", () =>{\n            var file: string | undefined = reader.result?.toString()\n            if(file){\n                setNewGroupChatPicture(file)\n            }\n        })\n        reader.onerror = (error) => {\n            alert('Error: ' + error)\n        }\n        reader.readAsDataURL(event.target.files[0])\n    }\n\n    // Сохранение изменений\n    function SaveChanges(): void {\n        let data: {chatId: string, chatName: string, bio: string, picture: string, type: string} = { // формирование данных для запроса на сервер\n            chatId: props.chatInfo.id,\n            chatName: newGroupChatName,\n            bio: newGroupChatBio,\n            picture: newGroupChatPicture,\n            type: newGroupChatSmartType ? '2' : '3'\n        }\n        var request: {responseText: string, status: number} | null = Requests.ChangeChatInfo(data) // запрос на сохранение данных о профиле\n        switch(request?.status){\n            case 200:\n                props.Done()\n                break\n            case 401:\n                alert(\"User is not logged in.\")\n                break\n            case 403:\n                alert(\"User has insufficient rights.\")\n                break\n            default:\n                alert(\"Error.\")\n                break\n        }\n    }\n\n    return (\n            <div \n                className={classes.content}\n            >\n                <AppBar \n                    className={classes.header}\n                >\n                    <Toolbar>\n                        <Button\n                            onClick={()=>props.Done()}\n                            className={classes.headerButton}\n                            variant=\"outlined\"\n                        >\n                            Cancel\n                        </Button>\n                        <Typography \n                            className={classes.headerTitle}\n                            variant=\"h6\" \n                            noWrap\n                        />\n                        <Button\n                            onClick={()=>SaveChanges()}\n                            variant=\"outlined\"\n                            className={classes.headerButton}\n                        >\n                            Done\n                        </Button>\n                    </Toolbar>\n                </AppBar>\n                <Container\n                    className={classes.changeChatInfo}\n                >\n                    <Avatar \n                        src={newGroupChatPicture} \n                        className={classes.largeAvatar}\n                    />\n                    <Button\n                        variant=\"outlined\"\n                        component=\"label\"\n                        className={classes.setNewPhotoButton}\n                    >\n                        <input\n                            type=\"file\"\n                            onChange={(event: ChangeEvent<HTMLInputElement>)=>LoadPic(event)}\n                            hidden\n                            accept=\".png, .jpg, .jpeg, .svg\"\n                        />\n                        Set New Photo\n                    </Button>\n                    {newGroupChatPicture !== null ?\n                        <Button\n                            variant=\"contained\"\n                            className={classes.deletePhotoButton}\n                            onClick={()=>setNewGroupChatPicture('')}\n                        >\n                            <DeleteIcon />\n                            Delete\n                        </Button>\n                    : null}\n                    <TextField\n                        label=\"Name\"\n                        variant=\"standard\"\n                        value={newGroupChatName}\n                        className={classes.editNameButton}\n                        onChange={event=>setNewGroupChatName(event.target.value)}\n                    />\n                    <TextField\n                        label=\"Bio\"\n                        variant=\"standard\"\n                        value={newGroupChatBio}\n                        className={classes.editBioButton}\n                        onChange={event=>setNewGroupChatBio(event.target.value)}\n                    />\n                    {props.chatInfo.role === 'owner' ? \n                        <FormControlLabel\n                            control={<Switch color=\"primary\" checked={newGroupChatSmartType} onChange={(event: ChangeEvent<HTMLInputElement>)=>setNewGroupChatSmartType(event.target.checked)} />}\n                            label=\"Smart Type\"\n                            labelPlacement=\"start\"\n                        />\n                    : null}\n                </Container>\n            </div>\n    )\n}\n\nexport default ChangeChatInfo"]},"metadata":{},"sourceType":"module"}