{"ast":null,"code":"var _jsxFileName = \"/Users/andrejturin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Messenger-for-Exactpro/client-master/src/components/Authorization.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Requests from '../Requests';\nimport Cookie from '../Cookie';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Avatar, Button, Container, TextField, Typography } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; // Форма авторизации (вход/регистрация)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Authorization = props => {\n  _s();\n\n  const [username, setUsername] = useState(\"\"); // Введеный ник\n\n  const [password, setPassword] = useState(\"\"); // Введенный пароль\n\n  const crypt = require('crypto'); // Функция хэширования пароля\n  // Стили для формы\n\n\n  const useStyles = makeStyles(theme => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n      color: \"primary\"\n    }\n  }));\n  const classes = useStyles(); // Классы стилей \n  // Валидация формы\n\n  function FormSubmit() {\n    if (username === \"\" || password === \"\") {\n      alert(\"Not all fields of the form are filled in.\");\n      return false;\n    }\n\n    return true;\n  } // Успешная авторизация\n\n\n  function IsAuthorized() {\n    props.LogIn(); // Выход из формы авторизации\n\n    var request = Requests.Alive(); // Оповщение сервер, что клиент \"онлайн\"\n\n    switch (request === null || request === void 0 ? void 0 : request.status) {\n      case 0:\n        break;\n\n      case 200:\n        break;\n\n      case 401:\n        alert(\"User is not logged in.\");\n        break;\n\n      default:\n        alert(\"Error.\");\n        break;\n    }\n  } // Вход в мессенджер\n\n\n  function LogIn() {\n    if (FormSubmit()) {\n      var hashPassword = crypt.createHash('sha256').update(password).digest('hex'); // Хэширование пароля\n\n      var request = Requests.LogIn(username, hashPassword); // Запрос на вход\n\n      switch (request.status) {\n        case 200:\n          Cookie.Set('key', JSON.parse(request.responseText).key);\n          IsAuthorized();\n          break;\n\n        case 401:\n          alert(\"User is not logged in.\");\n          break;\n\n        default:\n          alert(\"Error.\");\n          break;\n      }\n    }\n  } // Регистрация\n\n\n  function SignIn() {\n    if (FormSubmit()) {\n      var data = {\n        // Формирование данных для запроса на сервер\n        name: username,\n        password: crypt.createHash('sha256').update(password).digest('hex') // Хэширование пароля\n\n      };\n      var request = Requests.SignIn(data); // Запорс на регистрацию\n\n      switch (request.status) {\n        case 200:\n          Cookie.Set('key', JSON.parse(request.responseText).key); // Кладем ключ сессии в куки бразузера\n\n          IsAuthorized(); // Успешная авторизация\n\n          break;\n\n        case 406:\n          alert(\"Username is taken.\");\n          break;\n\n        default:\n          alert(\"Error.\");\n          break;\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          autoFocus: true,\n          name: \"addres\",\n          label: \"Addres\",\n          type: \"addres\",\n          id: \"addres\",\n          autoComplete: \"off\",\n          value: addres,\n          onChange: event => setAddres(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"username\",\n          label: \"User name\",\n          name: \"username\",\n          autoComplete: \"off\",\n          value: username,\n          onChange: event => setUsername(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"off\",\n          value: password,\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          fullWidth: true,\n          variant: \"contained\",\n          className: classes.submit,\n          onClick: () => LogIn(),\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          fullWidth: true,\n          variant: \"contained\",\n          className: classes.submit,\n          onClick: () => SignIn(),\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Authorization, \"w5drAqmWVfW8iPf2IzFdLRPXy08=\", true);\n\n_c = Authorization;\nexport default Authorization;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authorization\");","map":{"version":3,"sources":["/Users/andrejturin/Документы/Messenger-for-Exactpro/client-master/src/components/Authorization.tsx"],"names":["useState","Requests","Cookie","makeStyles","Avatar","Button","Container","TextField","Typography","LockOutlinedIcon","Authorization","props","username","setUsername","password","setPassword","crypt","require","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","color","classes","FormSubmit","alert","IsAuthorized","LogIn","request","Alive","status","hashPassword","createHash","update","digest","Set","JSON","parse","responseText","key","SignIn","data","name","addres","event","setAddres","target","value"],"mappings":"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","sourcesContent":["import {useState} from 'react'\nimport Requests from '../Requests'\nimport Cookie from '../Cookie'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Avatar, Button, Container, TextField, Typography } from '@material-ui/core'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\n\n// Форма авторизации (вход/регистрация)\nconst Authorization = (props: { LogIn: () => void }) => {\n\n  const [username, setUsername] = useState<string>(\"\") // Введеный ник\n  const [password, setPassword] = useState<string>(\"\") // Введенный пароль\n  const crypt = require('crypto') // Функция хэширования пароля\n  // Стили для формы\n  const useStyles: any = makeStyles((theme) => ({ \n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n      color: \"primary\"\n    }\n  }))\n  const classes: any = useStyles() // Классы стилей \n\n  // Валидация формы\n  function FormSubmit(): boolean {\n    if(username === \"\" || password === \"\") {\n      alert(\"Not all fields of the form are filled in.\");\n      return false;\n    }\n    return true;\n  }\n\n  // Успешная авторизация\n  function IsAuthorized(): void{\n    props.LogIn() // Выход из формы авторизации\n    var request: {responseText: string, status: number} | null = Requests.Alive() // Оповщение сервер, что клиент \"онлайн\"\n    switch(request?.status){\n      case 0:\n        break\n      case 200:\n        break\n      case 401:\n        alert(\"User is not logged in.\")\n        break\n      default:\n        alert(\"Error.\")\n        break\n    }\n  }\n\n  // Вход в мессенджер\n  function LogIn(): void{\n    if (FormSubmit()) {\n      var hashPassword: string = crypt.createHash('sha256').update(password).digest('hex') // Хэширование пароля\n      var request: {responseText: string, status: number} = Requests.LogIn(username, hashPassword) // Запрос на вход\n      switch(request.status){\n        case 200:\n          Cookie.Set('key', JSON.parse(request.responseText).key)\n          IsAuthorized()\n          break\n        case 401:\n          alert(\"User is not logged in.\")\n          break\n        default:\n          alert(\"Error.\")\n          break\n      }\n    }\n  }\n\n  // Регистрация\n  function SignIn(): void{\n    if (FormSubmit()){\n      var data: {name: string, password: string} = { // Формирование данных для запроса на сервер\n        name: username,\n        password: crypt.createHash('sha256').update(password).digest('hex') // Хэширование пароля\n      }\n      var request: {responseText: string, status: number} = Requests.SignIn(data) // Запорс на регистрацию\n      switch(request.status){\n        case 200:\n          Cookie.Set('key', JSON.parse(request.responseText).key) // Кладем ключ сессии в куки бразузера\n          IsAuthorized() // Успешная авторизация\n          break\n        case 406:\n          alert(\"Username is taken.\")\n          break\n        default:\n          alert(\"Error.\")\n          break\n      }\n    }\n  }\n\n  return (\n      <Container \n        component=\"main\" \n        maxWidth=\"xs\"\n      >\n        <div \n          className={classes.paper}\n        >\n          <Avatar \n            className={classes.avatar}\n          >\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography\n            component=\"h1\" \n            variant=\"h5\"\n          >\n            Sign Up\n          </Typography>\n          <form\n            className={classes.form}\n            noValidate\n          >\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              autoFocus\n              name=\"addres\"\n              label=\"Addres\"\n              type=\"addres\"\n              id=\"addres\"\n              autoComplete=\"off\"\n              value={addres}\n              onChange={event=>setAddres(event.target.value)} \n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"User name\"\n              name=\"username\"\n              autoComplete=\"off\"\n              value={username}\n              onChange={event=>setUsername(event.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"off\"\n              value={password} \n              onChange={event=>setPassword(event.target.value)}\n            />\n            <Button\n              type=\"button\"\n              fullWidth\n              variant=\"contained\"\n              className={classes.submit}\n              onClick={()=>LogIn()}\n            >\n              Log In\n            </Button>\n            <Button\n              type=\"button\"\n              fullWidth\n              variant=\"contained\"\n              className={classes.submit}\n              onClick={()=>SignIn()}\n            >\n              Sign In\n            </Button>\n          </form>\n        </div>\n      </Container>\n    )\n}\n\nexport default Authorization"]},"metadata":{},"sourceType":"module"}