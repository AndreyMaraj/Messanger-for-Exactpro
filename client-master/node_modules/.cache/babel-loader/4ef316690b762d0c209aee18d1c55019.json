{"ast":null,"code":"var _jsxFileName = \"/home/maria/Messenger-for-Exactpro/client-master/src/components/Chats.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport Requests from '../Requests';\nimport Chat from './Chat';\nimport CreateChat from './CreateChat';\nimport UserAvatar from './UserAvatar';\nimport { AppBar, Avatar, IconButton, InputBase, List, ListItem, ListItemAvatar, ListItemSecondaryAction, ListItemText, Toolbar, Typography } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ChatId; // Чаты пользователя\n\nconst Chats = observer(_c = _s(({\n  chatsStore,\n  messagesStore,\n  groupUsersStore,\n  profileStore,\n  onlineStatusStore\n}) => {\n  _s();\n\n  const chats = 'Chats';\n  const chat = 'Chat';\n  const addChat = 'AddChat';\n  const [item, setItem] = useState(chats); // Отображаемый элемент\n\n  const [searchChat, setSearchChat] = useState(\"\");\n  const useStyles = makeStyles(theme => // стили\n  createStyles({\n    content: {\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden'\n    },\n    header: {\n      position: \"static\",\n      flexGrow: 1,\n      height: '10%'\n    },\n    headerTitle: {\n      marginLeft: theme.spacing(2)\n    },\n    headerButton: {\n      marginLeft: theme.spacing(2),\n      color: 'white',\n      background: '#3d50b6'\n    },\n    chats: {\n      width: '100%',\n      position: 'relative',\n      overflow: 'scroll',\n      height: '90%'\n    },\n    smallAvatar: {\n      width: theme.spacing(5),\n      height: theme.spacing(5)\n    },\n    search: {\n      flexGrow: 1,\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto'\n      }\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    inputRoot: {\n      color: 'inherit'\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: '20ch'\n      }\n    }\n  }));\n  const classes = useStyles(); // классы стилей\n  // Открытие чата\n\n  function OpenChat() {\n    groupUsersStore.usersData = []; // очитска информации о пользователях чата\n\n    groupUsersStore.chatId = ChatId;\n    var request = Requests.OpenChat(ChatId); // запрос на сервер об открытии чата\n\n    var Chat = {\n      // создание информации о чате\n      id: '',\n      type: '',\n      title: '',\n      bio: '',\n      picture: '',\n      role: '',\n      lastReadIdMessage: ''\n    };\n\n    switch (request === null || request === void 0 ? void 0 : request.status) {\n      case 200:\n        chatsStore.chatsData.map(chat => {\n          // заполнение информации о чате\n          if (chat.id === ChatId) {\n            Chat = chat;\n          }\n        });\n        return Chat;\n\n      case 401:\n        alert(\"User is not logged in.\");\n        return Chat;\n\n      default:\n        alert(\"Error.\");\n        return Chat;\n    }\n  } // Удаление чата\n\n\n  function DeleteChat(dialog) {\n    let data = {\n      // подготовка данных для отправки на сервер\n      chatId: dialog.id\n    };\n    var request = Requests.DeleteChat(data); // запрос на удаление чата\n\n    switch (request === null || request === void 0 ? void 0 : request.status) {\n      case 200:\n        break;\n\n      case 401:\n        alert(\"User is not logged in.\");\n        break;\n\n      default:\n        alert(\"Error.\");\n        break;\n    }\n  } // Получение всех пользователей мессенджера \n\n\n  function GetUsers() {\n    var request = Requests.GetAllUsers(); // запрос на получение всех пользователей мессенджера \n\n    switch (request === null || request === void 0 ? void 0 : request.status) {\n      case 200:\n        return JSON.parse(request.responseText);\n\n      case 401:\n        alert(\"User is not logged in.\");\n        return [];\n\n      default:\n        alert(\"Error.\");\n        return [];\n    }\n  } // Отображение элмента\n\n\n  function SetItem() {\n    switch (item) {\n      case addChat:\n        return /*#__PURE__*/_jsxDEV(CreateChat, {\n          users: GetUsers(),\n          profileStore: profileStore,\n          onlineStatusStore: onlineStatusStore,\n          Done: chatId => {\n            if (chatId === null) {\n              setItem(chats);\n            } else {\n              ChatId = chatId;\n              setItem(chat);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this);\n\n      case chat:\n        return /*#__PURE__*/_jsxDEV(Chat, {\n          messagesStore: messagesStore,\n          groupUsersStore: groupUsersStore,\n          chatInfo: OpenChat(),\n          profileStore: profileStore,\n          onlineStatusStore: onlineStatusStore,\n          Done: () => setItem(chats)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this);\n\n      case chats:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.content,\n          children: [/*#__PURE__*/_jsxDEV(AppBar, {\n            className: classes.header,\n            children: /*#__PURE__*/_jsxDEV(Toolbar, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.headerTitle,\n                variant: \"h6\",\n                noWrap: true,\n                children: \"Chats\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.search,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.searchIcon,\n                  children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n                  placeholder: \"Search\\u2026\",\n                  classes: {\n                    root: classes.inputRoot,\n                    input: classes.inputInput\n                  },\n                  inputProps: {\n                    'aria-label': 'search'\n                  },\n                  value: searchChat,\n                  onChange: event => setSearchChat(event.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => setItem(addChat),\n                edge: \"start\",\n                className: classes.headerButton,\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            dense: true,\n            className: classes.chats,\n            children: chatsStore.chatsData.map((dialog, index) => {\n              if (!dialog.title.includes(searchChat)) {\n                return;\n              }\n\n              var count = 0;\n              var newMessage = false;\n              messagesStore.messagesData.map(message => {\n                if (message.chatId === dialog.id) {\n                  if (newMessage && !message.mine) {\n                    count++;\n                  }\n\n                  if (message.id === dialog.lastReadIdMessage) {\n                    newMessage = true;\n                  }\n                }\n              });\n              return /*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: dialog.type === '1' ? /*#__PURE__*/_jsxDEV(UserAvatar, {\n                    user: {\n                      name: dialog.title,\n                      picture: dialog.picture\n                    },\n                    onlineStatusStore: onlineStatusStore,\n                    size: 5\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 49\n                  }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: dialog.picture,\n                    className: classes.smallAvatar\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: dialog.title,\n                  secondary: count === 0 ? null : count + \" Unread Message\",\n                  onClick: () => {\n                    ChatId = dialog.id;\n                    setItem(chat);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    edge: \"end\",\n                    \"aria-label\": \"delete\",\n                    onClick: () => DeleteChat(dialog),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 41\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this);\n    }\n  }\n\n  return SetItem();\n}, \"tdlXCQUb3K6KmX57qpI8X0MJB14=\", false, function () {\n  return [useStyles];\n}));\n_c2 = Chats;\nexport default Chats;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chats$observer\");\n$RefreshReg$(_c2, \"Chats\");","map":{"version":3,"sources":["/home/maria/Messenger-for-Exactpro/client-master/src/components/Chats.tsx"],"names":["React","useState","observer","Requests","Chat","CreateChat","UserAvatar","AppBar","Avatar","IconButton","InputBase","List","ListItem","ListItemAvatar","ListItemSecondaryAction","ListItemText","Toolbar","Typography","DeleteIcon","AddIcon","makeStyles","createStyles","SearchIcon","ChatId","Chats","chatsStore","messagesStore","groupUsersStore","profileStore","onlineStatusStore","chats","chat","addChat","item","setItem","searchChat","setSearchChat","useStyles","theme","content","width","height","overflow","header","position","flexGrow","headerTitle","marginLeft","spacing","headerButton","color","background","smallAvatar","search","borderRadius","shape","marginRight","breakpoints","up","searchIcon","padding","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","classes","OpenChat","usersData","chatId","request","id","type","title","bio","picture","role","lastReadIdMessage","status","chatsData","map","alert","DeleteChat","dialog","data","GetUsers","GetAllUsers","JSON","parse","responseText","SetItem","root","input","event","target","value","index","includes","count","newMessage","messagesData","message","mine","name"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { observer } from 'mobx-react'\nimport Requests from '../Requests'\nimport Chat from './Chat'\nimport CreateChat from './CreateChat'\nimport UserAvatar from './UserAvatar'\nimport ChatsStore from '../stores/ChatsStore'\nimport MessagesStore from '../stores/MessagesStore'\nimport OnlineStatusStore from '../stores/OnlineStatusStore'\nimport ProfileStore from '../stores/ProfileStore'\nimport GroupUsersStore from '../stores/GroupUsersStore'\nimport {ChatsUpdate} from '../interfaces/ChatsUpdate'\nimport { UserInfo } from '../interfaces/UserInfo'\nimport { MessagesUpdate } from '../interfaces/MessagesUpdate'\nimport { AppBar, Avatar, IconButton, InputBase, List, ListItem, ListItemAvatar, ListItemSecondaryAction, ListItemText, Toolbar, Typography } from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport AddIcon  from '@material-ui/icons/Add'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\n\nvar ChatId: string\n\n// Чаты пользователя\nconst Chats = observer(({chatsStore, messagesStore, groupUsersStore,  profileStore, onlineStatusStore}:{chatsStore: ChatsStore, messagesStore: MessagesStore, groupUsersStore: GroupUsersStore,  profileStore: ProfileStore, onlineStatusStore: OnlineStatusStore}) => {\n\n    const chats: string = 'Chats'\n    const chat: string = 'Chat'\n    const addChat: string = 'AddChat'\n    const [item, setItem] = useState<string>(chats) // Отображаемый элемент\n    const [searchChat, setSearchChat] = useState<string>(\"\")\n    const useStyles = makeStyles((theme: Theme) => // стили\n        createStyles({\n            content: {\n                width: '100%',\n                height: '100%',\n                overflow: 'hidden'\n            },\n            header: {\n                position: \"static\",\n                flexGrow: 1,\n                height: '10%'\n            },\n            headerTitle: {\n                marginLeft: theme.spacing(2)\n            },\n            headerButton: {\n                marginLeft: theme.spacing(2),\n                color: 'white',\n                background: '#3d50b6'\n            },\n            chats: {\n                width: '100%',\n                position: 'relative',\n                overflow: 'scroll',\n                height: '90%'\n            },\n            smallAvatar: {\n                width: theme.spacing(5),\n                height: theme.spacing(5)\n            },\n            search: {\n                flexGrow: 1,\n                position: 'relative',\n                borderRadius: theme.shape.borderRadius,\n                marginRight: theme.spacing(2),\n                marginLeft: 0,\n                width: '100%',\n                [theme.breakpoints.up('sm')]: {\n                  marginLeft: theme.spacing(3),\n                  width: 'auto',\n                },\n              },\n              searchIcon: {\n                padding: theme.spacing(0, 2),\n                height: '100%',\n                position: 'absolute',\n                pointerEvents: 'none',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n              },\n              inputRoot: {\n                color: 'inherit',\n              },\n              inputInput: {\n                padding: theme.spacing(1, 1, 1, 0),\n                // vertical padding + font size from searchIcon\n                paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n                transition: theme.transitions.create('width'),\n                width: '100%',\n                [theme.breakpoints.up('md')]: {\n                  width: '20ch',\n                },\n              },\n        })\n    )\n    const classes = useStyles() // классы стилей\n\n    // Открытие чата\n    function OpenChat(): ChatsUpdate {\n        groupUsersStore.usersData = [] // очитска информации о пользователях чата\n        groupUsersStore.chatId = ChatId \n        var request: {responseText: string, status: number} | null = Requests.OpenChat(ChatId) // запрос на сервер об открытии чата\n        var Chat: ChatsUpdate = { // создание информации о чате\n            id: '',\n            type: '',\n            title: '',\n            bio: '',\n            picture: '',\n            role: '',\n            lastReadIdMessage: ''\n        }\n        switch(request?.status){\n            case 200:\n                chatsStore.chatsData.map((chat: ChatsUpdate)=>{ // заполнение информации о чате\n                    if(chat.id === ChatId){\n                        Chat = chat\n                    }\n                })\n                return Chat\n            case 401:\n                alert(\"User is not logged in.\")\n                return Chat\n            default:\n                alert(\"Error.\")\n                return Chat\n        }  \n    }\n\n    // Удаление чата\n    function DeleteChat(dialog: ChatsUpdate): void {\n        let data = { // подготовка данных для отправки на сервер\n            chatId: dialog.id\n        }\n        var request: {responseText: string, status: number} | null = Requests.DeleteChat(data) // запрос на удаление чата\n        switch(request?.status){\n            case 200:\n                break\n            case 401:\n                alert(\"User is not logged in.\")\n                break\n            default:\n                alert(\"Error.\")\n                break\n        }\n    }\n\n    // Получение всех пользователей мессенджера \n    function GetUsers(): UserInfo[]{\n        var request: {responseText: string, status: number} | null = Requests.GetAllUsers() // запрос на получение всех пользователей мессенджера \n        switch(request?.status){\n          case 200:\n            return JSON.parse(request.responseText) as UserInfo[]\n          case 401:\n            alert(\"User is not logged in.\")\n            return [];\n          default:\n            alert(\"Error.\")\n            return []\n        }\n    }\n\n    // Отображение элмента\n    function SetItem(): JSX.Element {\n        switch(item){\n            case addChat:\n                return(\n                    <CreateChat \n                        users={GetUsers()}\n                        profileStore={profileStore}\n                        onlineStatusStore={onlineStatusStore}\n                        Done={(chatId: string | null) => {if(chatId === null) {setItem(chats)} else{ChatId = chatId; setItem(chat)}}}\n                    />\n                )\n            case chat:\n                return(\n                    <Chat \n                        messagesStore={messagesStore} \n                        groupUsersStore={groupUsersStore} \n                        chatInfo={OpenChat()} \n                        profileStore={profileStore}\n                        onlineStatusStore={onlineStatusStore} \n                        Done={()=>setItem(chats)}\n                    />\n                )\n            case chats:\n                return(\n                    <div \n                        className={classes.content}\n                    >\n                        <AppBar\n                            className={classes.header}\n                        >\n                            <Toolbar>\n                                <Typography \n                                    className={classes.headerTitle} \n                                    variant=\"h6\" \n                                    noWrap\n                                >\n                                    Chats\n                                </Typography>\n                                <div className={classes.search}>\n                                    <div className={classes.searchIcon}>\n                                        <SearchIcon />\n                                    </div>\n                                    <InputBase\n                                        placeholder=\"Search…\"\n                                        classes={{\n                                            root: classes.inputRoot,\n                                            input: classes.inputInput,\n                                        }}\n                                        inputProps={{ 'aria-label': 'search' }}\n                                        value={searchChat}\n                                        onChange={event=>setSearchChat(event.target.value)}\n                                    />\n                                </div>\n                                <IconButton\n                                    onClick={()=>setItem(addChat)}\n                                    edge=\"start\"\n                                    className={classes.headerButton}\n                                >\n                                    <AddIcon/>\n                                </IconButton>\n                            </Toolbar>\n                        </AppBar>\n                        <List \n                            dense={true}\n                            className={classes.chats}\n                        >\n                            {chatsStore.chatsData.map((dialog: ChatsUpdate, index: number) =>{\n                                if(!dialog.title.includes(searchChat)) {\n                                    return;\n                                }\n                                var count: number = 0\n                                var newMessage: boolean = false\n                                messagesStore.messagesData.map((message: MessagesUpdate) =>{\n                                    if(message.chatId === dialog.id){\n                                        if(newMessage && !message.mine){\n                                            count++\n                                        }\n                                        if(message.id === dialog.lastReadIdMessage){\n                                            newMessage = true\n                                        }\n                                    }\n                                })\n                                return(\n                                    <ListItem \n                                        key={index}\n                                    >\n                                        <ListItemAvatar>\n                                            {dialog.type === '1' ?\n                                                <UserAvatar \n                                                    user={{name: dialog.title, picture: dialog.picture}} \n                                                    onlineStatusStore={onlineStatusStore}\n                                                    size={5}\n                                                />\n                                            :\n                                                <Avatar\n                                                    src={dialog.picture}\n                                                    className={classes.smallAvatar}\n                                                />\n                                            }\n                                        </ListItemAvatar>\n                                        <ListItemText\n                                            primary={dialog.title}\n                                            secondary={count === 0 ? null : count + \" Unread Message\"}\n                                            onClick={()=>{ChatId = dialog.id; setItem(chat)}}\n                                        />\n                                        <ListItemSecondaryAction>\n                                            <IconButton \n                                                edge=\"end\" \n                                                aria-label=\"delete\"\n                                                onClick={()=>DeleteChat(dialog)}\n                                            >\n                                                <DeleteIcon />\n                                            </IconButton>\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                )\n                            })}\n                        </List>\n                    </div>\n                )\n            default:\n                return(\n                    <React.Fragment/>\n                )\n        }\n    }\n\n    return (\n        SetItem()\n    )\n})\n\nexport default Chats"]},"metadata":{},"sourceType":"module"}