{"ast":null,"code":"var _jsxFileName = \"/Users/andrejturin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Messenger-for-Exactpro/client-master/src/components/Messenger.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Requests from '../Requests';\nimport Chats from './Chats';\nimport Profile from './Profile';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { BottomNavigation, BottomNavigationAction, Container } from '@material-ui/core';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Messenger = props => {\n  _s();\n\n  const [item, setItem] = useState('Chats'); // Отображаемый элемент \n  // Стили \n\n  const useStyles = makeStyles(theme => createStyles({\n    main: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%'\n    },\n    footer: {\n      marginTop: 'auto',\n      height: '10%'\n    }\n  }));\n  const classes = useStyles(); // Классы стилей \n  // Открытие профиля\n\n  function OpenProfile() {\n    // Очистка данных о профиле\n    props.profileStore.Clear();\n    var request = Requests.OpenProfile(''); // запорс на открытие порфиля\n\n    switch (request === null || request === void 0 ? void 0 : request.status) {\n      case 200:\n        break;\n\n      case 401:\n        alert(\"User is not logged in.\");\n        break;\n\n      default:\n        alert(\"Error.\");\n        break;\n    }\n  } // Отображение элемента\n\n\n  function SetItem() {\n    switch (item) {\n      case 'Profile':\n        OpenProfile();\n        return /*#__PURE__*/_jsxDEV(Profile, {\n          profileStore: props.profileStore,\n          onlineStatusStore: props.onlineStatusStore,\n          Change: true,\n          Done: () => props.Disconnect()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this);\n\n      case 'Chats':\n        return /*#__PURE__*/_jsxDEV(Chats, {\n          chatsStore: props.chatsStore,\n          groupUsersStore: props.groupUsersStore,\n          messagesStore: props.messagesStore,\n          profileStore: props.profileStore,\n          onlineStatusStore: props.onlineStatusStore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.main,\n    children: [SetItem(), /*#__PURE__*/_jsxDEV(BottomNavigation, {\n      value: item === 'Profile' ? 0 : 1,\n      onChange: (event, newValue) => {\n        setItem(newValue === 0 ? 'Profile' : 'Chats');\n      },\n      showLabels: true,\n      className: classes.footer,\n      children: [/*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n        label: \"Profile\",\n        icon: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n        label: \"Chats\",\n        icon: /*#__PURE__*/_jsxDEV(ChatBubbleOutlineIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Messenger, \"iJj36PiwELytGooaXjvQ6wUD8OM=\", true);\n\n_c = Messenger;\nexport default Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["/Users/andrejturin/Документы/Messenger-for-Exactpro/client-master/src/components/Messenger.tsx"],"names":["React","useState","Requests","Chats","Profile","makeStyles","createStyles","BottomNavigation","BottomNavigationAction","Container","AccountCircleIcon","ChatBubbleOutlineIcon","Messenger","props","item","setItem","useStyles","theme","main","display","flexDirection","height","footer","marginTop","classes","OpenProfile","profileStore","Clear","request","status","alert","SetItem","onlineStatusStore","Disconnect","chatsStore","groupUsersStore","messagesStore","event","newValue"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport Requests from '../Requests'\nimport Chats from './Chats'\nimport Profile from './Profile'\nimport ChatsStore from '../stores/ChatsStore'\nimport GroupUsersStore from '../stores/GroupUsersStore'\nimport MessagesStore from '../stores/MessagesStore'\nimport ProfileStore from '../stores/ProfileStore'\nimport OnlineStatusStore from '../stores/OnlineStatusStore'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport { BottomNavigation, BottomNavigationAction, Container } from '@material-ui/core'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline'\n\nconst Messenger = (props: {chatsStore: ChatsStore, messagesStore: MessagesStore, groupUsersStore: GroupUsersStore, profileStore: ProfileStore, onlineStatusStore: OnlineStatusStore, Disconnect: ()=> void}) => {\n\n    const [item, setItem] = useState<string>('Chats') // Отображаемый элемент \n\n    // Стили \n    const useStyles: any = makeStyles((theme: Theme) =>\n        createStyles({\n            main: {\n                display: 'flex',\n                flexDirection: 'column',\n                height: '100%'\n            },\n            footer: {\n                marginTop: 'auto',\n                height: '10%'\n            }\n        })\n    )\n    const classes: any = useStyles() // Классы стилей \n\n    // Открытие профиля\n    function OpenProfile(): void {\n        // Очистка данных о профиле\n        props.profileStore.Clear()\n        var request: {responseText: string, status: number} | null = Requests.OpenProfile('') // запорс на открытие порфиля\n        switch(request?.status){\n            case 200:\n                break\n            case 401:\n                alert(\"User is not logged in.\")\n                break\n            default:\n                alert(\"Error.\")\n                break\n        }\n    }\n\n    // Отображение элемента\n    function SetItem(): JSX.Element {\n        switch(item){\n            case 'Profile':\n                OpenProfile()\n                return(\n                    <Profile \n                        profileStore={props.profileStore} \n                        onlineStatusStore={props.onlineStatusStore} \n                        Change={true} \n                        Done={()=>props.Disconnect()}\n                    />\n                )\n            case 'Chats':\n                return(\n                    <Chats \n                        chatsStore={props.chatsStore} \n                        groupUsersStore={props.groupUsersStore} \n                        messagesStore={props.messagesStore} \n                        profileStore={props.profileStore} \n                        onlineStatusStore={props.onlineStatusStore}\n                    />\n                )\n            default:\n                return(\n                    <React.Fragment/>\n                )\n        }\n    }\n\n    return (\n            <Container\n                className={classes.main}\n            >\n                {SetItem()}\n                <BottomNavigation\n                    value={item === 'Profile' ? 0 : 1}\n                    onChange={(event, newValue) => {\n                        setItem(newValue === 0 ? 'Profile' : 'Chats');\n                    }}\n                    showLabels\n                    className={classes.footer}\n                >\n                    <BottomNavigationAction \n                        label=\"Profile\" \n                        icon={<AccountCircleIcon />} \n                    />\n                    <BottomNavigationAction \n                        label=\"Chats\" \n                        icon={<ChatBubbleOutlineIcon />} \n                    />\n                </BottomNavigation>\n            </Container>\n    )\n}\n\nexport default Messenger"]},"metadata":{},"sourceType":"module"}